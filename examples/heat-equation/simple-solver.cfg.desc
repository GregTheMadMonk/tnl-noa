group Problem
{
   integer dimensions(!)                  [Number of dimenions the problem is defined in.];
   string problem-name( "simple" )        [This defines particular problem.];
   string log-file("simple-problem.log")  [File name for the log.];
},[The problem parameters.];

group Discretisation
{
   string mesh( "mesh.tnl" )            [A file containing the numerical mesh.];
   string initial-condition("u-ini.tnl");
   string time-discretisation(!)     [Time discretisation for the time dependent problems. Can be explicit, semi-implicit or fully-implicit.];
},[The numerical scheme set-up.];

group Solver
{
   string real-type( "double" )                     [Precision of the floating point arithmetics. Can be float, double, long-double.];
   string index-type( "int" )                       [Indexing type for arrays, vectors, matrices etc. Can be int or long-int.];
   string device( "host" )                          [Device to use for the computations. Can be host or cuda.];
   string discrete-solver(!)                        [The main solver for the discretised problem.];
   real merson-adaptivity(1.0e-4)                   [Parameter controling adaptivity of the Runge-Kutta-Merson solver.];
   string time-function("time-independent")         [Time function.];
   string analytic-space-function(!)                [Analytic space solution.];
   real amplitude(1.0)                              [Amplitude of boundary and analytic function.];
   real wave-length(1.0)                            [Wave length of 1D boundary and 1D analytic function.];
   real wave-length-x(1.0)                          [Wave length in x-axis of boundary and analytic function.];
   real wave-length-y(1.0)                          [Wave length in y-axis of boundary and analytic function.];
   real wave-length-z(1.0)                          [Wave length in z-axis of boundary and analytic function.];
   real waves-number(0.0)                           [Number of waves];
   real waves-number-x(0.0)                         [Number of waves in x-axis];
   real waves-number-y(0.0)                         [Number of waves in y-axis];
   real waves-number-z(0.0)                         [Number of waves in z-axis];
   real phase(0.0)                                  [Phase of 1D boundary and 1D analytic function.];
   real phase-x(0.0)                                [Phase in x-axis of boundary and analytic function.];
   real phase-y(0.0)                                [Phase in y-axis of boundary and analytic function.];
   real phase-z(0.0)                                [Phase in z-axis of boundary and analytic function.];
   real sigma(1.0)                                  [Sigma.];
   real initial-tau(1.0e-5)                         [Initial time step for the time dependent PDE solver. It can be changed if an adaptive solver is used.];
   real snapshot-period(!)                          [Time period for writing a state of the time dependent problem to a file.];
   real final-time(!)                               [Stop time of the time dependent simulation.];
   integer verbose(1)                               [Set the verbose mode. The higher number the more messages are generated.];
},[The solver set-up.];
