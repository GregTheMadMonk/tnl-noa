# Makefile.in generated by automake 1.9.6 from Makefile.am.
# src/debug/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





srcdir = .
top_srcdir = ../..

pkgdatadir = $(datadir)/libtnl
pkglibdir = $(libdir)/libtnl
pkgincludedir = $(includedir)/libtnl
top_builddir = ../..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = i686-pc-linux-gnu
bin_PROGRAMS = tnl-debug-test$(EXEEXT)
am__append_1 = libtnldebug-mpi-0.1.la
am__append_2 = libtnldebug-dbg-0.1.la
am__append_3 = libtnldebug-mpi-dbg-0.1.la
subdir = src/debug
DIST_COMMON = $(libtnldebug_0_1_la_include_HEADERS) \
	$(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(libtnldebug_0_1_la_includedir)"
libLTLIBRARIES_INSTALL = $(INSTALL)
LTLIBRARIES = $(lib_LTLIBRARIES)
libtnldebug_0_1_la_LIBADD =
am__objects_1 = libtnldebug_0_1_la-tnlDebug.lo \
	libtnldebug_0_1_la-tnlDebugGroup.lo \
	libtnldebug_0_1_la-tnlDebugStructure.lo \
	libtnldebug_0_1_la-tnlDebugParser.lo \
	libtnldebug_0_1_la-tnlDebugScanner.lo \
	libtnldebug_0_1_la-parse.lo
am_libtnldebug_0_1_la_OBJECTS = $(am__objects_1)
libtnldebug_0_1_la_OBJECTS = $(am_libtnldebug_0_1_la_OBJECTS)
libtnldebug_dbg_0_1_la_LIBADD =
am__libtnldebug_dbg_0_1_la_SOURCES_DIST = tnlDebug.cpp \
	tnlDebugGroup.cpp tnlDebugStructure.cpp tnlDebugParser.cpp \
	tnlDebugScanner.cpp parse.cc
am__objects_2 = libtnldebug_dbg_0_1_la-tnlDebug.lo \
	libtnldebug_dbg_0_1_la-tnlDebugGroup.lo \
	libtnldebug_dbg_0_1_la-tnlDebugStructure.lo \
	libtnldebug_dbg_0_1_la-tnlDebugParser.lo \
	libtnldebug_dbg_0_1_la-tnlDebugScanner.lo \
	libtnldebug_dbg_0_1_la-parse.lo
am_libtnldebug_dbg_0_1_la_OBJECTS = $(am__objects_2)
libtnldebug_dbg_0_1_la_OBJECTS = $(am_libtnldebug_dbg_0_1_la_OBJECTS)
am_libtnldebug_dbg_0_1_la_rpath = -rpath $(libdir)
libtnldebug_mpi_0_1_la_LIBADD =
am__libtnldebug_mpi_0_1_la_SOURCES_DIST = tnlDebug.cpp \
	tnlDebugGroup.cpp tnlDebugStructure.cpp tnlDebugParser.cpp \
	tnlDebugScanner.cpp parse.cc
am__objects_3 = libtnldebug_mpi_0_1_la-tnlDebug.lo \
	libtnldebug_mpi_0_1_la-tnlDebugGroup.lo \
	libtnldebug_mpi_0_1_la-tnlDebugStructure.lo \
	libtnldebug_mpi_0_1_la-tnlDebugParser.lo \
	libtnldebug_mpi_0_1_la-tnlDebugScanner.lo \
	libtnldebug_mpi_0_1_la-parse.lo
am_libtnldebug_mpi_0_1_la_OBJECTS = $(am__objects_3)
libtnldebug_mpi_0_1_la_OBJECTS = $(am_libtnldebug_mpi_0_1_la_OBJECTS)
am_libtnldebug_mpi_0_1_la_rpath = -rpath $(libdir)
libtnldebug_mpi_dbg_0_1_la_LIBADD =
am__libtnldebug_mpi_dbg_0_1_la_SOURCES_DIST = tnlDebug.cpp \
	tnlDebugGroup.cpp tnlDebugStructure.cpp tnlDebugParser.cpp \
	tnlDebugScanner.cpp parse.cc
am__objects_4 = libtnldebug_mpi_dbg_0_1_la-tnlDebug.lo \
	libtnldebug_mpi_dbg_0_1_la-tnlDebugGroup.lo \
	libtnldebug_mpi_dbg_0_1_la-tnlDebugStructure.lo \
	libtnldebug_mpi_dbg_0_1_la-tnlDebugParser.lo \
	libtnldebug_mpi_dbg_0_1_la-tnlDebugScanner.lo \
	libtnldebug_mpi_dbg_0_1_la-parse.lo
am_libtnldebug_mpi_dbg_0_1_la_OBJECTS =  \
	$(am__objects_4)
libtnldebug_mpi_dbg_0_1_la_OBJECTS =  \
	$(am_libtnldebug_mpi_dbg_0_1_la_OBJECTS)
am_libtnldebug_mpi_dbg_0_1_la_rpath = -rpath \
	$(libdir)
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am_tnl_debug_test_OBJECTS = tnl-debug-test.$(OBJEXT)
tnl_debug_test_OBJECTS = $(am_tnl_debug_test_OBJECTS)
tnl_debug_test_DEPENDENCIES = libtnldebug-0.1.la
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libtnldebug_0_1_la_SOURCES) \
	$(libtnldebug_dbg_0_1_la_SOURCES) \
	$(libtnldebug_mpi_0_1_la_SOURCES) \
	$(libtnldebug_mpi_dbg_0_1_la_SOURCES) \
	$(tnl_debug_test_SOURCES)
DIST_SOURCES = $(libtnldebug_0_1_la_SOURCES) \
	$(am__libtnldebug_dbg_0_1_la_SOURCES_DIST) \
	$(am__libtnldebug_mpi_0_1_la_SOURCES_DIST) \
	$(am__libtnldebug_mpi_dbg_0_1_la_SOURCES_DIST) \
	$(tnl_debug_test_SOURCES)
libtnldebug_0_1_la_includeHEADERS_INSTALL = $(INSTALL_HEADER)
HEADERS = $(libtnldebug_0_1_la_include_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/oberhuber/workspace/tnl/missing --run aclocal-1.9
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /home/oberhuber/workspace/tnl/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /home/oberhuber/workspace/tnl/missing --run autoconf
AUTOHEADER = ${SHELL} /home/oberhuber/workspace/tnl/missing --run autoheader
AUTOMAKE = ${SHELL} /home/oberhuber/workspace/tnl/missing --run automake-1.9
AWK = gawk
BUILD_DBG_FALSE = #
BUILD_DBG_TRUE = 
BUILD_MPI_DBG_FALSE = #
BUILD_MPI_DBG_TRUE = 
BUILD_MPI_FALSE = #
BUILD_MPI_TRUE = 
CC = ccache gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = ccache gcc -E
CPPFLAGS = 
CXX = ccache g++
CXXCPP = ccache g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2 -I../core -I../debug -I../diff -I../dist  -I../src/debug -I../src/core -I../src/diff
CYGPATH_W = echo
DBGCXXFLAGS = -O0 -DDEBUG -g3 -Wall -W -ansi -Wno-unused
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DSYMUTIL = 
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
F77 = 
FFLAGS = 
GREP = /bin/grep
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/oberhuber/workspace/tnl/missing --run makeinfo
MPICC = 
MPICXX = yes
MPICXXFLAGS = -I/usr/lib/openmpi/include/openmpi -I/usr/lib/openmpi/include -pthread -DHAVE_MPI
MPILDFLAGS = -pthread -L/usr/lib/openmpi/lib -lmpi_cxx -lmpi -lopen-rte -lopen-pal -ldl -Wl,--export-dynamic -lnsl -lutil -lm -ldl
NMEDIT = 
OBJEXT = o
OPTIMISECXXFLAGS = -O3
PACKAGE = libtnl
PACKAGE_BUGREPORT = 
PACKAGE_NAME = tnl
PACKAGE_STRING = tnl 0.1
PACKAGE_TARNAME = tnl
PACKAGE_VERSION = 0.1
PATH_SEPARATOR = :
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
VERSION = 0.1
ac_ct_CC = ccache gcc
ac_ct_CXX = 
ac_ct_F77 = 
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = /home/oberhuber/workspace/tnl/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = mkdir -p --
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /home/oberhuber/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target_alias = 
EXTRA_DIST = tnlDebugParser.y \
	     tnlDebugScanner.l \
             create-tnl-debug-parser

sources = tnlDebug.cpp \
          tnlDebugGroup.cpp \
          tnlDebugStructure.cpp \
	  tnlDebugParser.cpp \
	  tnlDebugScanner.cpp \
	  parse.cc

headers = tnlDbgDataElement.h \
	  tnlDebugEntry.h \
	  tnlDebugGroup.h \
	  tnlDebugParserbase.h \
	  tnlDebugParser.h \
          tnlDebug.h \
	  tnlDebugScanner.h \
	  tnlDebugStructure.h

tnl_debug_test_SOURCES = tnl-debug-test.cpp
tnl_debug_test_LDADD = libtnldebug-0.1.la 
lib_LTLIBRARIES = libtnldebug-0.1.la $(am__append_1) $(am__append_2) \
	$(am__append_3)
libtnldebug_0_1_la_includedir = $(includedir)/tnldebug-0.1
libtnldebug_0_1_la_include_HEADERS = $(headers)
libtnldebug_0_1_la_SOURCES = $(sources)
libtnldebug_0_1_la_CXXFLAGS = $(CXXFLAGS) $(OPTIMISECXXFLAGS)
libtnldebug_mpi_0_1_la_SOURCES = $(sources)
libtnldebug_mpi_0_1_la_CXXFLAGS = $(CXXFLAGS) $(MPICXXFLAGS)
libtnldebug_mpi_0_1_la_LDFLAGS = $(LDFLAGS) $(MPILDFLAGS)
libtnldebug_dbg_0_1_la_SOURCES = $(sources)
libtnldebug_dbg_0_1_la_CXXFLAGS = $(CXXFLAGS) $(DBGCXXFLAGS)
libtnldebug_mpi_dbg_0_1_la_SOURCES = $(sources)
libtnldebug_mpi_dbg_0_1_la_CXXFLAGS = $(CXXFLAGS) $(MPICXXFLAGS) $(DBGCXXFLAGS)
libtnldebug_mpi_dbg_0_1_la_LDFLAGS = $(LDFLAGS) $(MPILDFLAGS)
all: all-am

.SUFFIXES:
.SUFFIXES: .cc .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/debug/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/debug/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(mkdir_p) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@set -x; list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " $(LIBTOOL) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  $(LIBTOOL) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libtnldebug-0.1.la: $(libtnldebug_0_1_la_OBJECTS) $(libtnldebug_0_1_la_DEPENDENCIES) 
	$(CXXLINK) -rpath $(libdir) $(libtnldebug_0_1_la_LDFLAGS) $(libtnldebug_0_1_la_OBJECTS) $(libtnldebug_0_1_la_LIBADD) $(LIBS)
libtnldebug-dbg-0.1.la: $(libtnldebug_dbg_0_1_la_OBJECTS) $(libtnldebug_dbg_0_1_la_DEPENDENCIES) 
	$(CXXLINK) $(am_libtnldebug_dbg_0_1_la_rpath) $(libtnldebug_dbg_0_1_la_LDFLAGS) $(libtnldebug_dbg_0_1_la_OBJECTS) $(libtnldebug_dbg_0_1_la_LIBADD) $(LIBS)
libtnldebug-mpi-0.1.la: $(libtnldebug_mpi_0_1_la_OBJECTS) $(libtnldebug_mpi_0_1_la_DEPENDENCIES) 
	$(CXXLINK) $(am_libtnldebug_mpi_0_1_la_rpath) $(libtnldebug_mpi_0_1_la_LDFLAGS) $(libtnldebug_mpi_0_1_la_OBJECTS) $(libtnldebug_mpi_0_1_la_LIBADD) $(LIBS)
libtnldebug-mpi-dbg-0.1.la: $(libtnldebug_mpi_dbg_0_1_la_OBJECTS) $(libtnldebug_mpi_dbg_0_1_la_DEPENDENCIES) 
	$(CXXLINK) $(am_libtnldebug_mpi_dbg_0_1_la_rpath) $(libtnldebug_mpi_dbg_0_1_la_LDFLAGS) $(libtnldebug_mpi_dbg_0_1_la_OBJECTS) $(libtnldebug_mpi_dbg_0_1_la_LIBADD) $(LIBS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(mkdir_p) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
tnl-debug-test$(EXEEXT): $(tnl_debug_test_OBJECTS) $(tnl_debug_test_DEPENDENCIES) 
	@rm -f tnl-debug-test$(EXEEXT)
	$(CXXLINK) $(tnl_debug_test_LDFLAGS) $(tnl_debug_test_OBJECTS) $(tnl_debug_test_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libtnldebug_0_1_la-parse.Plo
include ./$(DEPDIR)/libtnldebug_0_1_la-tnlDebug.Plo
include ./$(DEPDIR)/libtnldebug_0_1_la-tnlDebugGroup.Plo
include ./$(DEPDIR)/libtnldebug_0_1_la-tnlDebugParser.Plo
include ./$(DEPDIR)/libtnldebug_0_1_la-tnlDebugScanner.Plo
include ./$(DEPDIR)/libtnldebug_0_1_la-tnlDebugStructure.Plo
include ./$(DEPDIR)/libtnldebug_dbg_0_1_la-parse.Plo
include ./$(DEPDIR)/libtnldebug_dbg_0_1_la-tnlDebug.Plo
include ./$(DEPDIR)/libtnldebug_dbg_0_1_la-tnlDebugGroup.Plo
include ./$(DEPDIR)/libtnldebug_dbg_0_1_la-tnlDebugParser.Plo
include ./$(DEPDIR)/libtnldebug_dbg_0_1_la-tnlDebugScanner.Plo
include ./$(DEPDIR)/libtnldebug_dbg_0_1_la-tnlDebugStructure.Plo
include ./$(DEPDIR)/libtnldebug_mpi_0_1_la-parse.Plo
include ./$(DEPDIR)/libtnldebug_mpi_0_1_la-tnlDebug.Plo
include ./$(DEPDIR)/libtnldebug_mpi_0_1_la-tnlDebugGroup.Plo
include ./$(DEPDIR)/libtnldebug_mpi_0_1_la-tnlDebugParser.Plo
include ./$(DEPDIR)/libtnldebug_mpi_0_1_la-tnlDebugScanner.Plo
include ./$(DEPDIR)/libtnldebug_mpi_0_1_la-tnlDebugStructure.Plo
include ./$(DEPDIR)/libtnldebug_mpi_dbg_0_1_la-parse.Plo
include ./$(DEPDIR)/libtnldebug_mpi_dbg_0_1_la-tnlDebug.Plo
include ./$(DEPDIR)/libtnldebug_mpi_dbg_0_1_la-tnlDebugGroup.Plo
include ./$(DEPDIR)/libtnldebug_mpi_dbg_0_1_la-tnlDebugParser.Plo
include ./$(DEPDIR)/libtnldebug_mpi_dbg_0_1_la-tnlDebugScanner.Plo
include ./$(DEPDIR)/libtnldebug_mpi_dbg_0_1_la-tnlDebugStructure.Plo
include ./$(DEPDIR)/tnl-debug-test.Po

.cc.o:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
	if $(LTCXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

libtnldebug_0_1_la-tnlDebug.lo: tnlDebug.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnldebug_0_1_la_CXXFLAGS) $(CXXFLAGS) -MT libtnldebug_0_1_la-tnlDebug.lo -MD -MP -MF "$(DEPDIR)/libtnldebug_0_1_la-tnlDebug.Tpo" -c -o libtnldebug_0_1_la-tnlDebug.lo `test -f 'tnlDebug.cpp' || echo '$(srcdir)/'`tnlDebug.cpp; \
	then mv -f "$(DEPDIR)/libtnldebug_0_1_la-tnlDebug.Tpo" "$(DEPDIR)/libtnldebug_0_1_la-tnlDebug.Plo"; else rm -f "$(DEPDIR)/libtnldebug_0_1_la-tnlDebug.Tpo"; exit 1; fi
#	source='tnlDebug.cpp' object='libtnldebug_0_1_la-tnlDebug.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnldebug_0_1_la_CXXFLAGS) $(CXXFLAGS) -c -o libtnldebug_0_1_la-tnlDebug.lo `test -f 'tnlDebug.cpp' || echo '$(srcdir)/'`tnlDebug.cpp

libtnldebug_0_1_la-tnlDebugGroup.lo: tnlDebugGroup.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnldebug_0_1_la_CXXFLAGS) $(CXXFLAGS) -MT libtnldebug_0_1_la-tnlDebugGroup.lo -MD -MP -MF "$(DEPDIR)/libtnldebug_0_1_la-tnlDebugGroup.Tpo" -c -o libtnldebug_0_1_la-tnlDebugGroup.lo `test -f 'tnlDebugGroup.cpp' || echo '$(srcdir)/'`tnlDebugGroup.cpp; \
	then mv -f "$(DEPDIR)/libtnldebug_0_1_la-tnlDebugGroup.Tpo" "$(DEPDIR)/libtnldebug_0_1_la-tnlDebugGroup.Plo"; else rm -f "$(DEPDIR)/libtnldebug_0_1_la-tnlDebugGroup.Tpo"; exit 1; fi
#	source='tnlDebugGroup.cpp' object='libtnldebug_0_1_la-tnlDebugGroup.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnldebug_0_1_la_CXXFLAGS) $(CXXFLAGS) -c -o libtnldebug_0_1_la-tnlDebugGroup.lo `test -f 'tnlDebugGroup.cpp' || echo '$(srcdir)/'`tnlDebugGroup.cpp

libtnldebug_0_1_la-tnlDebugStructure.lo: tnlDebugStructure.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnldebug_0_1_la_CXXFLAGS) $(CXXFLAGS) -MT libtnldebug_0_1_la-tnlDebugStructure.lo -MD -MP -MF "$(DEPDIR)/libtnldebug_0_1_la-tnlDebugStructure.Tpo" -c -o libtnldebug_0_1_la-tnlDebugStructure.lo `test -f 'tnlDebugStructure.cpp' || echo '$(srcdir)/'`tnlDebugStructure.cpp; \
	then mv -f "$(DEPDIR)/libtnldebug_0_1_la-tnlDebugStructure.Tpo" "$(DEPDIR)/libtnldebug_0_1_la-tnlDebugStructure.Plo"; else rm -f "$(DEPDIR)/libtnldebug_0_1_la-tnlDebugStructure.Tpo"; exit 1; fi
#	source='tnlDebugStructure.cpp' object='libtnldebug_0_1_la-tnlDebugStructure.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnldebug_0_1_la_CXXFLAGS) $(CXXFLAGS) -c -o libtnldebug_0_1_la-tnlDebugStructure.lo `test -f 'tnlDebugStructure.cpp' || echo '$(srcdir)/'`tnlDebugStructure.cpp

libtnldebug_0_1_la-tnlDebugParser.lo: tnlDebugParser.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnldebug_0_1_la_CXXFLAGS) $(CXXFLAGS) -MT libtnldebug_0_1_la-tnlDebugParser.lo -MD -MP -MF "$(DEPDIR)/libtnldebug_0_1_la-tnlDebugParser.Tpo" -c -o libtnldebug_0_1_la-tnlDebugParser.lo `test -f 'tnlDebugParser.cpp' || echo '$(srcdir)/'`tnlDebugParser.cpp; \
	then mv -f "$(DEPDIR)/libtnldebug_0_1_la-tnlDebugParser.Tpo" "$(DEPDIR)/libtnldebug_0_1_la-tnlDebugParser.Plo"; else rm -f "$(DEPDIR)/libtnldebug_0_1_la-tnlDebugParser.Tpo"; exit 1; fi
#	source='tnlDebugParser.cpp' object='libtnldebug_0_1_la-tnlDebugParser.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnldebug_0_1_la_CXXFLAGS) $(CXXFLAGS) -c -o libtnldebug_0_1_la-tnlDebugParser.lo `test -f 'tnlDebugParser.cpp' || echo '$(srcdir)/'`tnlDebugParser.cpp

libtnldebug_0_1_la-tnlDebugScanner.lo: tnlDebugScanner.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnldebug_0_1_la_CXXFLAGS) $(CXXFLAGS) -MT libtnldebug_0_1_la-tnlDebugScanner.lo -MD -MP -MF "$(DEPDIR)/libtnldebug_0_1_la-tnlDebugScanner.Tpo" -c -o libtnldebug_0_1_la-tnlDebugScanner.lo `test -f 'tnlDebugScanner.cpp' || echo '$(srcdir)/'`tnlDebugScanner.cpp; \
	then mv -f "$(DEPDIR)/libtnldebug_0_1_la-tnlDebugScanner.Tpo" "$(DEPDIR)/libtnldebug_0_1_la-tnlDebugScanner.Plo"; else rm -f "$(DEPDIR)/libtnldebug_0_1_la-tnlDebugScanner.Tpo"; exit 1; fi
#	source='tnlDebugScanner.cpp' object='libtnldebug_0_1_la-tnlDebugScanner.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnldebug_0_1_la_CXXFLAGS) $(CXXFLAGS) -c -o libtnldebug_0_1_la-tnlDebugScanner.lo `test -f 'tnlDebugScanner.cpp' || echo '$(srcdir)/'`tnlDebugScanner.cpp

libtnldebug_0_1_la-parse.lo: parse.cc
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnldebug_0_1_la_CXXFLAGS) $(CXXFLAGS) -MT libtnldebug_0_1_la-parse.lo -MD -MP -MF "$(DEPDIR)/libtnldebug_0_1_la-parse.Tpo" -c -o libtnldebug_0_1_la-parse.lo `test -f 'parse.cc' || echo '$(srcdir)/'`parse.cc; \
	then mv -f "$(DEPDIR)/libtnldebug_0_1_la-parse.Tpo" "$(DEPDIR)/libtnldebug_0_1_la-parse.Plo"; else rm -f "$(DEPDIR)/libtnldebug_0_1_la-parse.Tpo"; exit 1; fi
#	source='parse.cc' object='libtnldebug_0_1_la-parse.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnldebug_0_1_la_CXXFLAGS) $(CXXFLAGS) -c -o libtnldebug_0_1_la-parse.lo `test -f 'parse.cc' || echo '$(srcdir)/'`parse.cc

libtnldebug_dbg_0_1_la-tnlDebug.lo: tnlDebug.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnldebug_dbg_0_1_la_CXXFLAGS) $(CXXFLAGS) -MT libtnldebug_dbg_0_1_la-tnlDebug.lo -MD -MP -MF "$(DEPDIR)/libtnldebug_dbg_0_1_la-tnlDebug.Tpo" -c -o libtnldebug_dbg_0_1_la-tnlDebug.lo `test -f 'tnlDebug.cpp' || echo '$(srcdir)/'`tnlDebug.cpp; \
	then mv -f "$(DEPDIR)/libtnldebug_dbg_0_1_la-tnlDebug.Tpo" "$(DEPDIR)/libtnldebug_dbg_0_1_la-tnlDebug.Plo"; else rm -f "$(DEPDIR)/libtnldebug_dbg_0_1_la-tnlDebug.Tpo"; exit 1; fi
#	source='tnlDebug.cpp' object='libtnldebug_dbg_0_1_la-tnlDebug.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnldebug_dbg_0_1_la_CXXFLAGS) $(CXXFLAGS) -c -o libtnldebug_dbg_0_1_la-tnlDebug.lo `test -f 'tnlDebug.cpp' || echo '$(srcdir)/'`tnlDebug.cpp

libtnldebug_dbg_0_1_la-tnlDebugGroup.lo: tnlDebugGroup.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnldebug_dbg_0_1_la_CXXFLAGS) $(CXXFLAGS) -MT libtnldebug_dbg_0_1_la-tnlDebugGroup.lo -MD -MP -MF "$(DEPDIR)/libtnldebug_dbg_0_1_la-tnlDebugGroup.Tpo" -c -o libtnldebug_dbg_0_1_la-tnlDebugGroup.lo `test -f 'tnlDebugGroup.cpp' || echo '$(srcdir)/'`tnlDebugGroup.cpp; \
	then mv -f "$(DEPDIR)/libtnldebug_dbg_0_1_la-tnlDebugGroup.Tpo" "$(DEPDIR)/libtnldebug_dbg_0_1_la-tnlDebugGroup.Plo"; else rm -f "$(DEPDIR)/libtnldebug_dbg_0_1_la-tnlDebugGroup.Tpo"; exit 1; fi
#	source='tnlDebugGroup.cpp' object='libtnldebug_dbg_0_1_la-tnlDebugGroup.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnldebug_dbg_0_1_la_CXXFLAGS) $(CXXFLAGS) -c -o libtnldebug_dbg_0_1_la-tnlDebugGroup.lo `test -f 'tnlDebugGroup.cpp' || echo '$(srcdir)/'`tnlDebugGroup.cpp

libtnldebug_dbg_0_1_la-tnlDebugStructure.lo: tnlDebugStructure.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnldebug_dbg_0_1_la_CXXFLAGS) $(CXXFLAGS) -MT libtnldebug_dbg_0_1_la-tnlDebugStructure.lo -MD -MP -MF "$(DEPDIR)/libtnldebug_dbg_0_1_la-tnlDebugStructure.Tpo" -c -o libtnldebug_dbg_0_1_la-tnlDebugStructure.lo `test -f 'tnlDebugStructure.cpp' || echo '$(srcdir)/'`tnlDebugStructure.cpp; \
	then mv -f "$(DEPDIR)/libtnldebug_dbg_0_1_la-tnlDebugStructure.Tpo" "$(DEPDIR)/libtnldebug_dbg_0_1_la-tnlDebugStructure.Plo"; else rm -f "$(DEPDIR)/libtnldebug_dbg_0_1_la-tnlDebugStructure.Tpo"; exit 1; fi
#	source='tnlDebugStructure.cpp' object='libtnldebug_dbg_0_1_la-tnlDebugStructure.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnldebug_dbg_0_1_la_CXXFLAGS) $(CXXFLAGS) -c -o libtnldebug_dbg_0_1_la-tnlDebugStructure.lo `test -f 'tnlDebugStructure.cpp' || echo '$(srcdir)/'`tnlDebugStructure.cpp

libtnldebug_dbg_0_1_la-tnlDebugParser.lo: tnlDebugParser.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnldebug_dbg_0_1_la_CXXFLAGS) $(CXXFLAGS) -MT libtnldebug_dbg_0_1_la-tnlDebugParser.lo -MD -MP -MF "$(DEPDIR)/libtnldebug_dbg_0_1_la-tnlDebugParser.Tpo" -c -o libtnldebug_dbg_0_1_la-tnlDebugParser.lo `test -f 'tnlDebugParser.cpp' || echo '$(srcdir)/'`tnlDebugParser.cpp; \
	then mv -f "$(DEPDIR)/libtnldebug_dbg_0_1_la-tnlDebugParser.Tpo" "$(DEPDIR)/libtnldebug_dbg_0_1_la-tnlDebugParser.Plo"; else rm -f "$(DEPDIR)/libtnldebug_dbg_0_1_la-tnlDebugParser.Tpo"; exit 1; fi
#	source='tnlDebugParser.cpp' object='libtnldebug_dbg_0_1_la-tnlDebugParser.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnldebug_dbg_0_1_la_CXXFLAGS) $(CXXFLAGS) -c -o libtnldebug_dbg_0_1_la-tnlDebugParser.lo `test -f 'tnlDebugParser.cpp' || echo '$(srcdir)/'`tnlDebugParser.cpp

libtnldebug_dbg_0_1_la-tnlDebugScanner.lo: tnlDebugScanner.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnldebug_dbg_0_1_la_CXXFLAGS) $(CXXFLAGS) -MT libtnldebug_dbg_0_1_la-tnlDebugScanner.lo -MD -MP -MF "$(DEPDIR)/libtnldebug_dbg_0_1_la-tnlDebugScanner.Tpo" -c -o libtnldebug_dbg_0_1_la-tnlDebugScanner.lo `test -f 'tnlDebugScanner.cpp' || echo '$(srcdir)/'`tnlDebugScanner.cpp; \
	then mv -f "$(DEPDIR)/libtnldebug_dbg_0_1_la-tnlDebugScanner.Tpo" "$(DEPDIR)/libtnldebug_dbg_0_1_la-tnlDebugScanner.Plo"; else rm -f "$(DEPDIR)/libtnldebug_dbg_0_1_la-tnlDebugScanner.Tpo"; exit 1; fi
#	source='tnlDebugScanner.cpp' object='libtnldebug_dbg_0_1_la-tnlDebugScanner.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnldebug_dbg_0_1_la_CXXFLAGS) $(CXXFLAGS) -c -o libtnldebug_dbg_0_1_la-tnlDebugScanner.lo `test -f 'tnlDebugScanner.cpp' || echo '$(srcdir)/'`tnlDebugScanner.cpp

libtnldebug_dbg_0_1_la-parse.lo: parse.cc
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnldebug_dbg_0_1_la_CXXFLAGS) $(CXXFLAGS) -MT libtnldebug_dbg_0_1_la-parse.lo -MD -MP -MF "$(DEPDIR)/libtnldebug_dbg_0_1_la-parse.Tpo" -c -o libtnldebug_dbg_0_1_la-parse.lo `test -f 'parse.cc' || echo '$(srcdir)/'`parse.cc; \
	then mv -f "$(DEPDIR)/libtnldebug_dbg_0_1_la-parse.Tpo" "$(DEPDIR)/libtnldebug_dbg_0_1_la-parse.Plo"; else rm -f "$(DEPDIR)/libtnldebug_dbg_0_1_la-parse.Tpo"; exit 1; fi
#	source='parse.cc' object='libtnldebug_dbg_0_1_la-parse.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnldebug_dbg_0_1_la_CXXFLAGS) $(CXXFLAGS) -c -o libtnldebug_dbg_0_1_la-parse.lo `test -f 'parse.cc' || echo '$(srcdir)/'`parse.cc

libtnldebug_mpi_0_1_la-tnlDebug.lo: tnlDebug.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnldebug_mpi_0_1_la_CXXFLAGS) $(CXXFLAGS) -MT libtnldebug_mpi_0_1_la-tnlDebug.lo -MD -MP -MF "$(DEPDIR)/libtnldebug_mpi_0_1_la-tnlDebug.Tpo" -c -o libtnldebug_mpi_0_1_la-tnlDebug.lo `test -f 'tnlDebug.cpp' || echo '$(srcdir)/'`tnlDebug.cpp; \
	then mv -f "$(DEPDIR)/libtnldebug_mpi_0_1_la-tnlDebug.Tpo" "$(DEPDIR)/libtnldebug_mpi_0_1_la-tnlDebug.Plo"; else rm -f "$(DEPDIR)/libtnldebug_mpi_0_1_la-tnlDebug.Tpo"; exit 1; fi
#	source='tnlDebug.cpp' object='libtnldebug_mpi_0_1_la-tnlDebug.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnldebug_mpi_0_1_la_CXXFLAGS) $(CXXFLAGS) -c -o libtnldebug_mpi_0_1_la-tnlDebug.lo `test -f 'tnlDebug.cpp' || echo '$(srcdir)/'`tnlDebug.cpp

libtnldebug_mpi_0_1_la-tnlDebugGroup.lo: tnlDebugGroup.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnldebug_mpi_0_1_la_CXXFLAGS) $(CXXFLAGS) -MT libtnldebug_mpi_0_1_la-tnlDebugGroup.lo -MD -MP -MF "$(DEPDIR)/libtnldebug_mpi_0_1_la-tnlDebugGroup.Tpo" -c -o libtnldebug_mpi_0_1_la-tnlDebugGroup.lo `test -f 'tnlDebugGroup.cpp' || echo '$(srcdir)/'`tnlDebugGroup.cpp; \
	then mv -f "$(DEPDIR)/libtnldebug_mpi_0_1_la-tnlDebugGroup.Tpo" "$(DEPDIR)/libtnldebug_mpi_0_1_la-tnlDebugGroup.Plo"; else rm -f "$(DEPDIR)/libtnldebug_mpi_0_1_la-tnlDebugGroup.Tpo"; exit 1; fi
#	source='tnlDebugGroup.cpp' object='libtnldebug_mpi_0_1_la-tnlDebugGroup.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnldebug_mpi_0_1_la_CXXFLAGS) $(CXXFLAGS) -c -o libtnldebug_mpi_0_1_la-tnlDebugGroup.lo `test -f 'tnlDebugGroup.cpp' || echo '$(srcdir)/'`tnlDebugGroup.cpp

libtnldebug_mpi_0_1_la-tnlDebugStructure.lo: tnlDebugStructure.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnldebug_mpi_0_1_la_CXXFLAGS) $(CXXFLAGS) -MT libtnldebug_mpi_0_1_la-tnlDebugStructure.lo -MD -MP -MF "$(DEPDIR)/libtnldebug_mpi_0_1_la-tnlDebugStructure.Tpo" -c -o libtnldebug_mpi_0_1_la-tnlDebugStructure.lo `test -f 'tnlDebugStructure.cpp' || echo '$(srcdir)/'`tnlDebugStructure.cpp; \
	then mv -f "$(DEPDIR)/libtnldebug_mpi_0_1_la-tnlDebugStructure.Tpo" "$(DEPDIR)/libtnldebug_mpi_0_1_la-tnlDebugStructure.Plo"; else rm -f "$(DEPDIR)/libtnldebug_mpi_0_1_la-tnlDebugStructure.Tpo"; exit 1; fi
#	source='tnlDebugStructure.cpp' object='libtnldebug_mpi_0_1_la-tnlDebugStructure.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnldebug_mpi_0_1_la_CXXFLAGS) $(CXXFLAGS) -c -o libtnldebug_mpi_0_1_la-tnlDebugStructure.lo `test -f 'tnlDebugStructure.cpp' || echo '$(srcdir)/'`tnlDebugStructure.cpp

libtnldebug_mpi_0_1_la-tnlDebugParser.lo: tnlDebugParser.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnldebug_mpi_0_1_la_CXXFLAGS) $(CXXFLAGS) -MT libtnldebug_mpi_0_1_la-tnlDebugParser.lo -MD -MP -MF "$(DEPDIR)/libtnldebug_mpi_0_1_la-tnlDebugParser.Tpo" -c -o libtnldebug_mpi_0_1_la-tnlDebugParser.lo `test -f 'tnlDebugParser.cpp' || echo '$(srcdir)/'`tnlDebugParser.cpp; \
	then mv -f "$(DEPDIR)/libtnldebug_mpi_0_1_la-tnlDebugParser.Tpo" "$(DEPDIR)/libtnldebug_mpi_0_1_la-tnlDebugParser.Plo"; else rm -f "$(DEPDIR)/libtnldebug_mpi_0_1_la-tnlDebugParser.Tpo"; exit 1; fi
#	source='tnlDebugParser.cpp' object='libtnldebug_mpi_0_1_la-tnlDebugParser.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnldebug_mpi_0_1_la_CXXFLAGS) $(CXXFLAGS) -c -o libtnldebug_mpi_0_1_la-tnlDebugParser.lo `test -f 'tnlDebugParser.cpp' || echo '$(srcdir)/'`tnlDebugParser.cpp

libtnldebug_mpi_0_1_la-tnlDebugScanner.lo: tnlDebugScanner.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnldebug_mpi_0_1_la_CXXFLAGS) $(CXXFLAGS) -MT libtnldebug_mpi_0_1_la-tnlDebugScanner.lo -MD -MP -MF "$(DEPDIR)/libtnldebug_mpi_0_1_la-tnlDebugScanner.Tpo" -c -o libtnldebug_mpi_0_1_la-tnlDebugScanner.lo `test -f 'tnlDebugScanner.cpp' || echo '$(srcdir)/'`tnlDebugScanner.cpp; \
	then mv -f "$(DEPDIR)/libtnldebug_mpi_0_1_la-tnlDebugScanner.Tpo" "$(DEPDIR)/libtnldebug_mpi_0_1_la-tnlDebugScanner.Plo"; else rm -f "$(DEPDIR)/libtnldebug_mpi_0_1_la-tnlDebugScanner.Tpo"; exit 1; fi
#	source='tnlDebugScanner.cpp' object='libtnldebug_mpi_0_1_la-tnlDebugScanner.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnldebug_mpi_0_1_la_CXXFLAGS) $(CXXFLAGS) -c -o libtnldebug_mpi_0_1_la-tnlDebugScanner.lo `test -f 'tnlDebugScanner.cpp' || echo '$(srcdir)/'`tnlDebugScanner.cpp

libtnldebug_mpi_0_1_la-parse.lo: parse.cc
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnldebug_mpi_0_1_la_CXXFLAGS) $(CXXFLAGS) -MT libtnldebug_mpi_0_1_la-parse.lo -MD -MP -MF "$(DEPDIR)/libtnldebug_mpi_0_1_la-parse.Tpo" -c -o libtnldebug_mpi_0_1_la-parse.lo `test -f 'parse.cc' || echo '$(srcdir)/'`parse.cc; \
	then mv -f "$(DEPDIR)/libtnldebug_mpi_0_1_la-parse.Tpo" "$(DEPDIR)/libtnldebug_mpi_0_1_la-parse.Plo"; else rm -f "$(DEPDIR)/libtnldebug_mpi_0_1_la-parse.Tpo"; exit 1; fi
#	source='parse.cc' object='libtnldebug_mpi_0_1_la-parse.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnldebug_mpi_0_1_la_CXXFLAGS) $(CXXFLAGS) -c -o libtnldebug_mpi_0_1_la-parse.lo `test -f 'parse.cc' || echo '$(srcdir)/'`parse.cc

libtnldebug_mpi_dbg_0_1_la-tnlDebug.lo: tnlDebug.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnldebug_mpi_dbg_0_1_la_CXXFLAGS) $(CXXFLAGS) -MT libtnldebug_mpi_dbg_0_1_la-tnlDebug.lo -MD -MP -MF "$(DEPDIR)/libtnldebug_mpi_dbg_0_1_la-tnlDebug.Tpo" -c -o libtnldebug_mpi_dbg_0_1_la-tnlDebug.lo `test -f 'tnlDebug.cpp' || echo '$(srcdir)/'`tnlDebug.cpp; \
	then mv -f "$(DEPDIR)/libtnldebug_mpi_dbg_0_1_la-tnlDebug.Tpo" "$(DEPDIR)/libtnldebug_mpi_dbg_0_1_la-tnlDebug.Plo"; else rm -f "$(DEPDIR)/libtnldebug_mpi_dbg_0_1_la-tnlDebug.Tpo"; exit 1; fi
#	source='tnlDebug.cpp' object='libtnldebug_mpi_dbg_0_1_la-tnlDebug.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnldebug_mpi_dbg_0_1_la_CXXFLAGS) $(CXXFLAGS) -c -o libtnldebug_mpi_dbg_0_1_la-tnlDebug.lo `test -f 'tnlDebug.cpp' || echo '$(srcdir)/'`tnlDebug.cpp

libtnldebug_mpi_dbg_0_1_la-tnlDebugGroup.lo: tnlDebugGroup.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnldebug_mpi_dbg_0_1_la_CXXFLAGS) $(CXXFLAGS) -MT libtnldebug_mpi_dbg_0_1_la-tnlDebugGroup.lo -MD -MP -MF "$(DEPDIR)/libtnldebug_mpi_dbg_0_1_la-tnlDebugGroup.Tpo" -c -o libtnldebug_mpi_dbg_0_1_la-tnlDebugGroup.lo `test -f 'tnlDebugGroup.cpp' || echo '$(srcdir)/'`tnlDebugGroup.cpp; \
	then mv -f "$(DEPDIR)/libtnldebug_mpi_dbg_0_1_la-tnlDebugGroup.Tpo" "$(DEPDIR)/libtnldebug_mpi_dbg_0_1_la-tnlDebugGroup.Plo"; else rm -f "$(DEPDIR)/libtnldebug_mpi_dbg_0_1_la-tnlDebugGroup.Tpo"; exit 1; fi
#	source='tnlDebugGroup.cpp' object='libtnldebug_mpi_dbg_0_1_la-tnlDebugGroup.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnldebug_mpi_dbg_0_1_la_CXXFLAGS) $(CXXFLAGS) -c -o libtnldebug_mpi_dbg_0_1_la-tnlDebugGroup.lo `test -f 'tnlDebugGroup.cpp' || echo '$(srcdir)/'`tnlDebugGroup.cpp

libtnldebug_mpi_dbg_0_1_la-tnlDebugStructure.lo: tnlDebugStructure.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnldebug_mpi_dbg_0_1_la_CXXFLAGS) $(CXXFLAGS) -MT libtnldebug_mpi_dbg_0_1_la-tnlDebugStructure.lo -MD -MP -MF "$(DEPDIR)/libtnldebug_mpi_dbg_0_1_la-tnlDebugStructure.Tpo" -c -o libtnldebug_mpi_dbg_0_1_la-tnlDebugStructure.lo `test -f 'tnlDebugStructure.cpp' || echo '$(srcdir)/'`tnlDebugStructure.cpp; \
	then mv -f "$(DEPDIR)/libtnldebug_mpi_dbg_0_1_la-tnlDebugStructure.Tpo" "$(DEPDIR)/libtnldebug_mpi_dbg_0_1_la-tnlDebugStructure.Plo"; else rm -f "$(DEPDIR)/libtnldebug_mpi_dbg_0_1_la-tnlDebugStructure.Tpo"; exit 1; fi
#	source='tnlDebugStructure.cpp' object='libtnldebug_mpi_dbg_0_1_la-tnlDebugStructure.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnldebug_mpi_dbg_0_1_la_CXXFLAGS) $(CXXFLAGS) -c -o libtnldebug_mpi_dbg_0_1_la-tnlDebugStructure.lo `test -f 'tnlDebugStructure.cpp' || echo '$(srcdir)/'`tnlDebugStructure.cpp

libtnldebug_mpi_dbg_0_1_la-tnlDebugParser.lo: tnlDebugParser.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnldebug_mpi_dbg_0_1_la_CXXFLAGS) $(CXXFLAGS) -MT libtnldebug_mpi_dbg_0_1_la-tnlDebugParser.lo -MD -MP -MF "$(DEPDIR)/libtnldebug_mpi_dbg_0_1_la-tnlDebugParser.Tpo" -c -o libtnldebug_mpi_dbg_0_1_la-tnlDebugParser.lo `test -f 'tnlDebugParser.cpp' || echo '$(srcdir)/'`tnlDebugParser.cpp; \
	then mv -f "$(DEPDIR)/libtnldebug_mpi_dbg_0_1_la-tnlDebugParser.Tpo" "$(DEPDIR)/libtnldebug_mpi_dbg_0_1_la-tnlDebugParser.Plo"; else rm -f "$(DEPDIR)/libtnldebug_mpi_dbg_0_1_la-tnlDebugParser.Tpo"; exit 1; fi
#	source='tnlDebugParser.cpp' object='libtnldebug_mpi_dbg_0_1_la-tnlDebugParser.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnldebug_mpi_dbg_0_1_la_CXXFLAGS) $(CXXFLAGS) -c -o libtnldebug_mpi_dbg_0_1_la-tnlDebugParser.lo `test -f 'tnlDebugParser.cpp' || echo '$(srcdir)/'`tnlDebugParser.cpp

libtnldebug_mpi_dbg_0_1_la-tnlDebugScanner.lo: tnlDebugScanner.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnldebug_mpi_dbg_0_1_la_CXXFLAGS) $(CXXFLAGS) -MT libtnldebug_mpi_dbg_0_1_la-tnlDebugScanner.lo -MD -MP -MF "$(DEPDIR)/libtnldebug_mpi_dbg_0_1_la-tnlDebugScanner.Tpo" -c -o libtnldebug_mpi_dbg_0_1_la-tnlDebugScanner.lo `test -f 'tnlDebugScanner.cpp' || echo '$(srcdir)/'`tnlDebugScanner.cpp; \
	then mv -f "$(DEPDIR)/libtnldebug_mpi_dbg_0_1_la-tnlDebugScanner.Tpo" "$(DEPDIR)/libtnldebug_mpi_dbg_0_1_la-tnlDebugScanner.Plo"; else rm -f "$(DEPDIR)/libtnldebug_mpi_dbg_0_1_la-tnlDebugScanner.Tpo"; exit 1; fi
#	source='tnlDebugScanner.cpp' object='libtnldebug_mpi_dbg_0_1_la-tnlDebugScanner.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnldebug_mpi_dbg_0_1_la_CXXFLAGS) $(CXXFLAGS) -c -o libtnldebug_mpi_dbg_0_1_la-tnlDebugScanner.lo `test -f 'tnlDebugScanner.cpp' || echo '$(srcdir)/'`tnlDebugScanner.cpp

libtnldebug_mpi_dbg_0_1_la-parse.lo: parse.cc
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnldebug_mpi_dbg_0_1_la_CXXFLAGS) $(CXXFLAGS) -MT libtnldebug_mpi_dbg_0_1_la-parse.lo -MD -MP -MF "$(DEPDIR)/libtnldebug_mpi_dbg_0_1_la-parse.Tpo" -c -o libtnldebug_mpi_dbg_0_1_la-parse.lo `test -f 'parse.cc' || echo '$(srcdir)/'`parse.cc; \
	then mv -f "$(DEPDIR)/libtnldebug_mpi_dbg_0_1_la-parse.Tpo" "$(DEPDIR)/libtnldebug_mpi_dbg_0_1_la-parse.Plo"; else rm -f "$(DEPDIR)/libtnldebug_mpi_dbg_0_1_la-parse.Tpo"; exit 1; fi
#	source='parse.cc' object='libtnldebug_mpi_dbg_0_1_la-parse.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnldebug_mpi_dbg_0_1_la_CXXFLAGS) $(CXXFLAGS) -c -o libtnldebug_mpi_dbg_0_1_la-parse.lo `test -f 'parse.cc' || echo '$(srcdir)/'`parse.cc

.cpp.o:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	if $(LTCXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:
install-libtnldebug_0_1_la_includeHEADERS: $(libtnldebug_0_1_la_include_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(libtnldebug_0_1_la_includedir)" || $(mkdir_p) "$(DESTDIR)$(libtnldebug_0_1_la_includedir)"
	@list='$(libtnldebug_0_1_la_include_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(libtnldebug_0_1_la_includeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(libtnldebug_0_1_la_includedir)/$$f'"; \
	  $(libtnldebug_0_1_la_includeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(libtnldebug_0_1_la_includedir)/$$f"; \
	done

uninstall-libtnldebug_0_1_la_includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(libtnldebug_0_1_la_include_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(libtnldebug_0_1_la_includedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(libtnldebug_0_1_la_includedir)/$$f"; \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(HEADERS)
install-binPROGRAMS: install-libLTLIBRARIES

installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(libtnldebug_0_1_la_includedir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-libtnldebug_0_1_la_includeHEADERS

install-exec-am: install-binPROGRAMS install-libLTLIBRARIES

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-info-am \
	uninstall-libLTLIBRARIES \
	uninstall-libtnldebug_0_1_la_includeHEADERS

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libLTLIBRARIES clean-libtool ctags \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-exec install-exec-am \
	install-info install-info-am install-libLTLIBRARIES \
	install-libtnldebug_0_1_la_includeHEADERS install-man \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-info-am \
	uninstall-libLTLIBRARIES \
	uninstall-libtnldebug_0_1_la_includeHEADERS

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
