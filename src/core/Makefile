# Makefile.in generated by automake 1.9.6 from Makefile.am.
# src/core/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



#if BUILDMPI
#SUBDIRS = mpi
#else
#SUBDIRS = 
#endif


srcdir = .
top_srcdir = ../..

pkgdatadir = $(datadir)/libtnl
pkglibdir = $(libdir)/libtnl
pkgincludedir = $(includedir)/libtnl
top_builddir = ../..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = i686-pc-linux-gnu
am__append_1 = libtnlcore-mpi-0.1.la
am__append_2 = libtnlcore-dbg-0.1.la
am__append_3 = libtnlcore-mpi-dbg-0.1.la
subdir = src/core
DIST_COMMON = $(libmcoreinclude_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(libdir)" \
	"$(DESTDIR)$(libmcoreincludedir)"
libLTLIBRARIES_INSTALL = $(INSTALL)
LTLIBRARIES = $(lib_LTLIBRARIES)
libtnlcore_0_1_la_LIBADD =
am__objects_1 = libtnlcore_0_1_la-mConfigDescription.lo \
	libtnlcore_0_1_la-mLogger.lo libtnlcore_0_1_la-tnlObject.lo \
	libtnlcore_0_1_la-mString.lo \
	libtnlcore_0_1_la-mConfigDescriptionScanner.lo \
	libtnlcore_0_1_la-mConfigDescriptionParser.lo \
	libtnlcore_0_1_la-mParameterContainer.lo \
	libtnlcore_0_1_la-mTimerCPU.lo libtnlcore_0_1_la-mTimerRT.lo \
	libtnlcore_0_1_la-compress-file.lo \
	libtnlcore_0_1_la-mfilename.lo libtnlcore_0_1_la-mpi-supp.lo \
	libtnlcore_0_1_la-parse.lo
am__objects_2 =
am_libtnlcore_0_1_la_OBJECTS = $(am__objects_1) $(am__objects_2)
libtnlcore_0_1_la_OBJECTS = $(am_libtnlcore_0_1_la_OBJECTS)
libtnlcore_dbg_0_1_la_LIBADD =
am__libtnlcore_dbg_0_1_la_SOURCES_DIST = mConfigDescription.cpp \
	mLogger.cpp tnlObject.cpp mString.cpp \
	mConfigDescriptionScanner.cpp mConfigDescriptionParser.cpp \
	mParameterContainer.cpp mTimerCPU.cpp mTimerRT.cpp \
	compress-file.cpp mfilename.cpp mpi-supp.cpp parse.cc mcore.h \
	mConfigDescription.h mCurve.h mDataElement.h mField1D.h \
	mField2D.h mField3D.h mFieldSystem1D.h mList.h mLongVector.h \
	mLogger.h tnlObject.h mString.h mConfigDescriptionParser.h \
	mConfigDescriptionParserbase.h mConfigDescriptionParser.ih \
	mConfigDescriptionScanner.h mParameterContainer.h mTimerCPU.h \
	mTimerRT.h mVector.h compress-file.h mfilename.h mfuncs.h \
	mpi-supp.h param-types.h debug.h
am__objects_3 = libtnlcore_dbg_0_1_la-mConfigDescription.lo \
	libtnlcore_dbg_0_1_la-mLogger.lo \
	libtnlcore_dbg_0_1_la-tnlObject.lo \
	libtnlcore_dbg_0_1_la-mString.lo \
	libtnlcore_dbg_0_1_la-mConfigDescriptionScanner.lo \
	libtnlcore_dbg_0_1_la-mConfigDescriptionParser.lo \
	libtnlcore_dbg_0_1_la-mParameterContainer.lo \
	libtnlcore_dbg_0_1_la-mTimerCPU.lo \
	libtnlcore_dbg_0_1_la-mTimerRT.lo \
	libtnlcore_dbg_0_1_la-compress-file.lo \
	libtnlcore_dbg_0_1_la-mfilename.lo \
	libtnlcore_dbg_0_1_la-mpi-supp.lo \
	libtnlcore_dbg_0_1_la-parse.lo
am_libtnlcore_dbg_0_1_la_OBJECTS = $(am__objects_3) \
	$(am__objects_2)
libtnlcore_dbg_0_1_la_OBJECTS = $(am_libtnlcore_dbg_0_1_la_OBJECTS)
am_libtnlcore_dbg_0_1_la_rpath = -rpath $(libdir)
libtnlcore_mpi_0_1_la_LIBADD =
am__libtnlcore_mpi_0_1_la_SOURCES_DIST = mConfigDescription.cpp \
	mLogger.cpp tnlObject.cpp mString.cpp \
	mConfigDescriptionScanner.cpp mConfigDescriptionParser.cpp \
	mParameterContainer.cpp mTimerCPU.cpp mTimerRT.cpp \
	compress-file.cpp mfilename.cpp mpi-supp.cpp parse.cc mcore.h \
	mConfigDescription.h mCurve.h mDataElement.h mField1D.h \
	mField2D.h mField3D.h mFieldSystem1D.h mList.h mLongVector.h \
	mLogger.h tnlObject.h mString.h mConfigDescriptionParser.h \
	mConfigDescriptionParserbase.h mConfigDescriptionParser.ih \
	mConfigDescriptionScanner.h mParameterContainer.h mTimerCPU.h \
	mTimerRT.h mVector.h compress-file.h mfilename.h mfuncs.h \
	mpi-supp.h param-types.h debug.h
am__objects_4 = libtnlcore_mpi_0_1_la-mConfigDescription.lo \
	libtnlcore_mpi_0_1_la-mLogger.lo \
	libtnlcore_mpi_0_1_la-tnlObject.lo \
	libtnlcore_mpi_0_1_la-mString.lo \
	libtnlcore_mpi_0_1_la-mConfigDescriptionScanner.lo \
	libtnlcore_mpi_0_1_la-mConfigDescriptionParser.lo \
	libtnlcore_mpi_0_1_la-mParameterContainer.lo \
	libtnlcore_mpi_0_1_la-mTimerCPU.lo \
	libtnlcore_mpi_0_1_la-mTimerRT.lo \
	libtnlcore_mpi_0_1_la-compress-file.lo \
	libtnlcore_mpi_0_1_la-mfilename.lo \
	libtnlcore_mpi_0_1_la-mpi-supp.lo \
	libtnlcore_mpi_0_1_la-parse.lo
am_libtnlcore_mpi_0_1_la_OBJECTS = $(am__objects_4) \
	$(am__objects_2)
libtnlcore_mpi_0_1_la_OBJECTS = $(am_libtnlcore_mpi_0_1_la_OBJECTS)
am_libtnlcore_mpi_0_1_la_rpath = -rpath $(libdir)
libtnlcore_mpi_dbg_0_1_la_LIBADD =
am__libtnlcore_mpi_dbg_0_1_la_SOURCES_DIST = mConfigDescription.cpp \
	mLogger.cpp tnlObject.cpp mString.cpp \
	mConfigDescriptionScanner.cpp mConfigDescriptionParser.cpp \
	mParameterContainer.cpp mTimerCPU.cpp mTimerRT.cpp \
	compress-file.cpp mfilename.cpp mpi-supp.cpp parse.cc mcore.h \
	mConfigDescription.h mCurve.h mDataElement.h mField1D.h \
	mField2D.h mField3D.h mFieldSystem1D.h mList.h mLongVector.h \
	mLogger.h tnlObject.h mString.h mConfigDescriptionParser.h \
	mConfigDescriptionParserbase.h mConfigDescriptionParser.ih \
	mConfigDescriptionScanner.h mParameterContainer.h mTimerCPU.h \
	mTimerRT.h mVector.h compress-file.h mfilename.h mfuncs.h \
	mpi-supp.h param-types.h debug.h
am__objects_5 = libtnlcore_mpi_dbg_0_1_la-mConfigDescription.lo \
	libtnlcore_mpi_dbg_0_1_la-mLogger.lo \
	libtnlcore_mpi_dbg_0_1_la-tnlObject.lo \
	libtnlcore_mpi_dbg_0_1_la-mString.lo \
	libtnlcore_mpi_dbg_0_1_la-mConfigDescriptionScanner.lo \
	libtnlcore_mpi_dbg_0_1_la-mConfigDescriptionParser.lo \
	libtnlcore_mpi_dbg_0_1_la-mParameterContainer.lo \
	libtnlcore_mpi_dbg_0_1_la-mTimerCPU.lo \
	libtnlcore_mpi_dbg_0_1_la-mTimerRT.lo \
	libtnlcore_mpi_dbg_0_1_la-compress-file.lo \
	libtnlcore_mpi_dbg_0_1_la-mfilename.lo \
	libtnlcore_mpi_dbg_0_1_la-mpi-supp.lo \
	libtnlcore_mpi_dbg_0_1_la-parse.lo
am_libtnlcore_mpi_dbg_0_1_la_OBJECTS =  \
	$(am__objects_5) $(am__objects_2)
libtnlcore_mpi_dbg_0_1_la_OBJECTS =  \
	$(am_libtnlcore_mpi_dbg_0_1_la_OBJECTS)
am_libtnlcore_mpi_dbg_0_1_la_rpath = -rpath \
	$(libdir)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libtnlcore_0_1_la_SOURCES) \
	$(libtnlcore_dbg_0_1_la_SOURCES) \
	$(libtnlcore_mpi_0_1_la_SOURCES) \
	$(libtnlcore_mpi_dbg_0_1_la_SOURCES)
DIST_SOURCES = $(libtnlcore_0_1_la_SOURCES) \
	$(am__libtnlcore_dbg_0_1_la_SOURCES_DIST) \
	$(am__libtnlcore_mpi_0_1_la_SOURCES_DIST) \
	$(am__libtnlcore_mpi_dbg_0_1_la_SOURCES_DIST)
libmcoreincludeHEADERS_INSTALL = $(INSTALL_HEADER)
HEADERS = $(libmcoreinclude_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/oberhuber/workspace/tnl/missing --run aclocal-1.9
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /home/oberhuber/workspace/tnl/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /home/oberhuber/workspace/tnl/missing --run autoconf
AUTOHEADER = ${SHELL} /home/oberhuber/workspace/tnl/missing --run autoheader
AUTOMAKE = ${SHELL} /home/oberhuber/workspace/tnl/missing --run automake-1.9
AWK = gawk
BUILD_DBG_FALSE = #
BUILD_DBG_TRUE = 
BUILD_MPI_DBG_FALSE = #
BUILD_MPI_DBG_TRUE = 
BUILD_MPI_FALSE = #
BUILD_MPI_TRUE = 
CC = ccache gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = ccache gcc -E
CPPFLAGS = 
CXX = ccache g++
CXXCPP = ccache g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2 -I../core -I../debug -I../diff -I../dist  -I../src/debug -I../src/core -I../src/diff
CYGPATH_W = echo
DBGCXXFLAGS = -O0 -DDEBUG -g3 -Wall -W -ansi -Wno-unused
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DSYMUTIL = 
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
F77 = 
FFLAGS = 
GREP = /bin/grep
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/oberhuber/workspace/tnl/missing --run makeinfo
MPICC = 
MPICXX = yes
MPICXXFLAGS = -I/usr/lib/openmpi/include/openmpi -I/usr/lib/openmpi/include -pthread -DHAVE_MPI
MPILDFLAGS = -pthread -L/usr/lib/openmpi/lib -lmpi_cxx -lmpi -lopen-rte -lopen-pal -ldl -Wl,--export-dynamic -lnsl -lutil -lm -ldl
NMEDIT = 
OBJEXT = o
OPTIMISECXXFLAGS = -O3
PACKAGE = libtnl
PACKAGE_BUGREPORT = 
PACKAGE_NAME = tnl
PACKAGE_STRING = tnl 0.1
PACKAGE_TARNAME = tnl
PACKAGE_VERSION = 0.1
PATH_SEPARATOR = :
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
VERSION = 0.1
ac_ct_CC = ccache gcc
ac_ct_CXX = 
ac_ct_F77 = 
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = /home/oberhuber/workspace/tnl/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = mkdir -p --
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /home/oberhuber/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target_alias = 
EXTRA_DIST = mConfigDescriptionParser.y \
	     mConfigDescriptionScanner.l \
	     FlexLexer.h

headers = mcore.h \
	  mConfigDescription.h \
	  mCurve.h \
	  mDataElement.h \
	  mField1D.h \
	  mField2D.h \
	  mField3D.h \
	  mFieldSystem1D.h \
	  mList.h \
	  mLongVector.h \
	  mLogger.h \
	  tnlObject.h \
	  mString.h \
	  mConfigDescriptionParser.h \
	  mConfigDescriptionParserbase.h \
	  mConfigDescriptionParser.ih \
	  mConfigDescriptionScanner.h \
	  mParameterContainer.h \
	  mTimerCPU.h \
	  mTimerRT.h \
	  mVector.h \
	  compress-file.h \
	  mfilename.h \
	  mfuncs.h \
	  mpi-supp.h \
	  param-types.h

sources = mConfigDescription.cpp \
	  mLogger.cpp \
	  tnlObject.cpp \
	  mString.cpp \
	  mConfigDescriptionScanner.cpp \
	  mConfigDescriptionParser.cpp \
	  mParameterContainer.cpp \
	  mTimerCPU.cpp \
	  mTimerRT.cpp \
	  compress-file.cpp \
	  mfilename.cpp \
	  mpi-supp.cpp \
	  parse.cc

libmcoreincludedir = $(includedir)/tnlcore-0.1
libmcoreinclude_HEADERS = $(headers)
lib_LTLIBRARIES = libtnlcore-0.1.la $(am__append_1) $(am__append_2) \
	$(am__append_3)
libtnlcore_0_1_la_SOURCES = $(sources) $(headers) debug.h
libtnlcore_0_1_la_CXXFLAGS = $(CXXFLAGS) $(OPTIMSECXXFLAGS)
libtnlcore_mpi_0_1_la_SOURCES = $(sources) $(headers) debug.h
libtnlcore_mpi_0_1_la_CXXFLAGS = $(CXXFLAGS) $(MPICXXFLAGS) $(OPTIMSECXXFLAGS)
libtnlcore_mpi_0_1_la_LDFLAGS = $(LDFLAGS) $(MPILDFLAGS)
libtnlcore_dbg_0_1_la_SOURCES = $(sources) $(headers) debug.h
libtnlcore_dbg_0_1_la_CXXFLAGS = $(CXXFLAGS) $(DBGCXXFLAGS)
libtnlcore_dbg_0_1_la_LDFLAGS = $(LDFLAGS) $(DBGLDFLAGS)
libtnlcore_mpi_dbg_0_1_la_SOURCES = $(sources) $(headers) debug.h
libtnlcore_mpi_dbg_0_1_la_CXXFLAGS = $(CXXFLAGS) $(MPICXXFLAGS) $(DBGCXXFLAGS)
libtnlcore_mpi_dbg_0_1_la_LDFLAGS = $(LDFLAGS) $(MPICXXFLAGS) $(DBGLDFLAGS)
all: all-am

.SUFFIXES:
.SUFFIXES: .cc .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/core/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/core/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(mkdir_p) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@set -x; list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " $(LIBTOOL) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  $(LIBTOOL) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libtnlcore-0.1.la: $(libtnlcore_0_1_la_OBJECTS) $(libtnlcore_0_1_la_DEPENDENCIES) 
	$(CXXLINK) -rpath $(libdir) $(libtnlcore_0_1_la_LDFLAGS) $(libtnlcore_0_1_la_OBJECTS) $(libtnlcore_0_1_la_LIBADD) $(LIBS)
libtnlcore-dbg-0.1.la: $(libtnlcore_dbg_0_1_la_OBJECTS) $(libtnlcore_dbg_0_1_la_DEPENDENCIES) 
	$(CXXLINK) $(am_libtnlcore_dbg_0_1_la_rpath) $(libtnlcore_dbg_0_1_la_LDFLAGS) $(libtnlcore_dbg_0_1_la_OBJECTS) $(libtnlcore_dbg_0_1_la_LIBADD) $(LIBS)
libtnlcore-mpi-0.1.la: $(libtnlcore_mpi_0_1_la_OBJECTS) $(libtnlcore_mpi_0_1_la_DEPENDENCIES) 
	$(CXXLINK) $(am_libtnlcore_mpi_0_1_la_rpath) $(libtnlcore_mpi_0_1_la_LDFLAGS) $(libtnlcore_mpi_0_1_la_OBJECTS) $(libtnlcore_mpi_0_1_la_LIBADD) $(LIBS)
libtnlcore-mpi-dbg-0.1.la: $(libtnlcore_mpi_dbg_0_1_la_OBJECTS) $(libtnlcore_mpi_dbg_0_1_la_DEPENDENCIES) 
	$(CXXLINK) $(am_libtnlcore_mpi_dbg_0_1_la_rpath) $(libtnlcore_mpi_dbg_0_1_la_LDFLAGS) $(libtnlcore_mpi_dbg_0_1_la_OBJECTS) $(libtnlcore_mpi_dbg_0_1_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libtnlcore_0_1_la-compress-file.Plo
include ./$(DEPDIR)/libtnlcore_0_1_la-mConfigDescription.Plo
include ./$(DEPDIR)/libtnlcore_0_1_la-mConfigDescriptionParser.Plo
include ./$(DEPDIR)/libtnlcore_0_1_la-mConfigDescriptionScanner.Plo
include ./$(DEPDIR)/libtnlcore_0_1_la-mLogger.Plo
include ./$(DEPDIR)/libtnlcore_0_1_la-mParameterContainer.Plo
include ./$(DEPDIR)/libtnlcore_0_1_la-mString.Plo
include ./$(DEPDIR)/libtnlcore_0_1_la-mTimerCPU.Plo
include ./$(DEPDIR)/libtnlcore_0_1_la-mTimerRT.Plo
include ./$(DEPDIR)/libtnlcore_0_1_la-mfilename.Plo
include ./$(DEPDIR)/libtnlcore_0_1_la-mpi-supp.Plo
include ./$(DEPDIR)/libtnlcore_0_1_la-parse.Plo
include ./$(DEPDIR)/libtnlcore_0_1_la-tnlObject.Plo
include ./$(DEPDIR)/libtnlcore_dbg_0_1_la-compress-file.Plo
include ./$(DEPDIR)/libtnlcore_dbg_0_1_la-mConfigDescription.Plo
include ./$(DEPDIR)/libtnlcore_dbg_0_1_la-mConfigDescriptionParser.Plo
include ./$(DEPDIR)/libtnlcore_dbg_0_1_la-mConfigDescriptionScanner.Plo
include ./$(DEPDIR)/libtnlcore_dbg_0_1_la-mLogger.Plo
include ./$(DEPDIR)/libtnlcore_dbg_0_1_la-mParameterContainer.Plo
include ./$(DEPDIR)/libtnlcore_dbg_0_1_la-mString.Plo
include ./$(DEPDIR)/libtnlcore_dbg_0_1_la-mTimerCPU.Plo
include ./$(DEPDIR)/libtnlcore_dbg_0_1_la-mTimerRT.Plo
include ./$(DEPDIR)/libtnlcore_dbg_0_1_la-mfilename.Plo
include ./$(DEPDIR)/libtnlcore_dbg_0_1_la-mpi-supp.Plo
include ./$(DEPDIR)/libtnlcore_dbg_0_1_la-parse.Plo
include ./$(DEPDIR)/libtnlcore_dbg_0_1_la-tnlObject.Plo
include ./$(DEPDIR)/libtnlcore_mpi_0_1_la-compress-file.Plo
include ./$(DEPDIR)/libtnlcore_mpi_0_1_la-mConfigDescription.Plo
include ./$(DEPDIR)/libtnlcore_mpi_0_1_la-mConfigDescriptionParser.Plo
include ./$(DEPDIR)/libtnlcore_mpi_0_1_la-mConfigDescriptionScanner.Plo
include ./$(DEPDIR)/libtnlcore_mpi_0_1_la-mLogger.Plo
include ./$(DEPDIR)/libtnlcore_mpi_0_1_la-mParameterContainer.Plo
include ./$(DEPDIR)/libtnlcore_mpi_0_1_la-mString.Plo
include ./$(DEPDIR)/libtnlcore_mpi_0_1_la-mTimerCPU.Plo
include ./$(DEPDIR)/libtnlcore_mpi_0_1_la-mTimerRT.Plo
include ./$(DEPDIR)/libtnlcore_mpi_0_1_la-mfilename.Plo
include ./$(DEPDIR)/libtnlcore_mpi_0_1_la-mpi-supp.Plo
include ./$(DEPDIR)/libtnlcore_mpi_0_1_la-parse.Plo
include ./$(DEPDIR)/libtnlcore_mpi_0_1_la-tnlObject.Plo
include ./$(DEPDIR)/libtnlcore_mpi_dbg_0_1_la-compress-file.Plo
include ./$(DEPDIR)/libtnlcore_mpi_dbg_0_1_la-mConfigDescription.Plo
include ./$(DEPDIR)/libtnlcore_mpi_dbg_0_1_la-mConfigDescriptionParser.Plo
include ./$(DEPDIR)/libtnlcore_mpi_dbg_0_1_la-mConfigDescriptionScanner.Plo
include ./$(DEPDIR)/libtnlcore_mpi_dbg_0_1_la-mLogger.Plo
include ./$(DEPDIR)/libtnlcore_mpi_dbg_0_1_la-mParameterContainer.Plo
include ./$(DEPDIR)/libtnlcore_mpi_dbg_0_1_la-mString.Plo
include ./$(DEPDIR)/libtnlcore_mpi_dbg_0_1_la-mTimerCPU.Plo
include ./$(DEPDIR)/libtnlcore_mpi_dbg_0_1_la-mTimerRT.Plo
include ./$(DEPDIR)/libtnlcore_mpi_dbg_0_1_la-mfilename.Plo
include ./$(DEPDIR)/libtnlcore_mpi_dbg_0_1_la-mpi-supp.Plo
include ./$(DEPDIR)/libtnlcore_mpi_dbg_0_1_la-parse.Plo
include ./$(DEPDIR)/libtnlcore_mpi_dbg_0_1_la-tnlObject.Plo

.cc.o:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
	if $(LTCXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

libtnlcore_0_1_la-mConfigDescription.lo: mConfigDescription.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_0_1_la_CXXFLAGS) $(CXXFLAGS) -MT libtnlcore_0_1_la-mConfigDescription.lo -MD -MP -MF "$(DEPDIR)/libtnlcore_0_1_la-mConfigDescription.Tpo" -c -o libtnlcore_0_1_la-mConfigDescription.lo `test -f 'mConfigDescription.cpp' || echo '$(srcdir)/'`mConfigDescription.cpp; \
	then mv -f "$(DEPDIR)/libtnlcore_0_1_la-mConfigDescription.Tpo" "$(DEPDIR)/libtnlcore_0_1_la-mConfigDescription.Plo"; else rm -f "$(DEPDIR)/libtnlcore_0_1_la-mConfigDescription.Tpo"; exit 1; fi
#	source='mConfigDescription.cpp' object='libtnlcore_0_1_la-mConfigDescription.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_0_1_la_CXXFLAGS) $(CXXFLAGS) -c -o libtnlcore_0_1_la-mConfigDescription.lo `test -f 'mConfigDescription.cpp' || echo '$(srcdir)/'`mConfigDescription.cpp

libtnlcore_0_1_la-mLogger.lo: mLogger.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_0_1_la_CXXFLAGS) $(CXXFLAGS) -MT libtnlcore_0_1_la-mLogger.lo -MD -MP -MF "$(DEPDIR)/libtnlcore_0_1_la-mLogger.Tpo" -c -o libtnlcore_0_1_la-mLogger.lo `test -f 'mLogger.cpp' || echo '$(srcdir)/'`mLogger.cpp; \
	then mv -f "$(DEPDIR)/libtnlcore_0_1_la-mLogger.Tpo" "$(DEPDIR)/libtnlcore_0_1_la-mLogger.Plo"; else rm -f "$(DEPDIR)/libtnlcore_0_1_la-mLogger.Tpo"; exit 1; fi
#	source='mLogger.cpp' object='libtnlcore_0_1_la-mLogger.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_0_1_la_CXXFLAGS) $(CXXFLAGS) -c -o libtnlcore_0_1_la-mLogger.lo `test -f 'mLogger.cpp' || echo '$(srcdir)/'`mLogger.cpp

libtnlcore_0_1_la-tnlObject.lo: tnlObject.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_0_1_la_CXXFLAGS) $(CXXFLAGS) -MT libtnlcore_0_1_la-tnlObject.lo -MD -MP -MF "$(DEPDIR)/libtnlcore_0_1_la-tnlObject.Tpo" -c -o libtnlcore_0_1_la-tnlObject.lo `test -f 'tnlObject.cpp' || echo '$(srcdir)/'`tnlObject.cpp; \
	then mv -f "$(DEPDIR)/libtnlcore_0_1_la-tnlObject.Tpo" "$(DEPDIR)/libtnlcore_0_1_la-tnlObject.Plo"; else rm -f "$(DEPDIR)/libtnlcore_0_1_la-tnlObject.Tpo"; exit 1; fi
#	source='tnlObject.cpp' object='libtnlcore_0_1_la-tnlObject.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_0_1_la_CXXFLAGS) $(CXXFLAGS) -c -o libtnlcore_0_1_la-tnlObject.lo `test -f 'tnlObject.cpp' || echo '$(srcdir)/'`tnlObject.cpp

libtnlcore_0_1_la-mString.lo: mString.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_0_1_la_CXXFLAGS) $(CXXFLAGS) -MT libtnlcore_0_1_la-mString.lo -MD -MP -MF "$(DEPDIR)/libtnlcore_0_1_la-mString.Tpo" -c -o libtnlcore_0_1_la-mString.lo `test -f 'mString.cpp' || echo '$(srcdir)/'`mString.cpp; \
	then mv -f "$(DEPDIR)/libtnlcore_0_1_la-mString.Tpo" "$(DEPDIR)/libtnlcore_0_1_la-mString.Plo"; else rm -f "$(DEPDIR)/libtnlcore_0_1_la-mString.Tpo"; exit 1; fi
#	source='mString.cpp' object='libtnlcore_0_1_la-mString.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_0_1_la_CXXFLAGS) $(CXXFLAGS) -c -o libtnlcore_0_1_la-mString.lo `test -f 'mString.cpp' || echo '$(srcdir)/'`mString.cpp

libtnlcore_0_1_la-mConfigDescriptionScanner.lo: mConfigDescriptionScanner.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_0_1_la_CXXFLAGS) $(CXXFLAGS) -MT libtnlcore_0_1_la-mConfigDescriptionScanner.lo -MD -MP -MF "$(DEPDIR)/libtnlcore_0_1_la-mConfigDescriptionScanner.Tpo" -c -o libtnlcore_0_1_la-mConfigDescriptionScanner.lo `test -f 'mConfigDescriptionScanner.cpp' || echo '$(srcdir)/'`mConfigDescriptionScanner.cpp; \
	then mv -f "$(DEPDIR)/libtnlcore_0_1_la-mConfigDescriptionScanner.Tpo" "$(DEPDIR)/libtnlcore_0_1_la-mConfigDescriptionScanner.Plo"; else rm -f "$(DEPDIR)/libtnlcore_0_1_la-mConfigDescriptionScanner.Tpo"; exit 1; fi
#	source='mConfigDescriptionScanner.cpp' object='libtnlcore_0_1_la-mConfigDescriptionScanner.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_0_1_la_CXXFLAGS) $(CXXFLAGS) -c -o libtnlcore_0_1_la-mConfigDescriptionScanner.lo `test -f 'mConfigDescriptionScanner.cpp' || echo '$(srcdir)/'`mConfigDescriptionScanner.cpp

libtnlcore_0_1_la-mConfigDescriptionParser.lo: mConfigDescriptionParser.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_0_1_la_CXXFLAGS) $(CXXFLAGS) -MT libtnlcore_0_1_la-mConfigDescriptionParser.lo -MD -MP -MF "$(DEPDIR)/libtnlcore_0_1_la-mConfigDescriptionParser.Tpo" -c -o libtnlcore_0_1_la-mConfigDescriptionParser.lo `test -f 'mConfigDescriptionParser.cpp' || echo '$(srcdir)/'`mConfigDescriptionParser.cpp; \
	then mv -f "$(DEPDIR)/libtnlcore_0_1_la-mConfigDescriptionParser.Tpo" "$(DEPDIR)/libtnlcore_0_1_la-mConfigDescriptionParser.Plo"; else rm -f "$(DEPDIR)/libtnlcore_0_1_la-mConfigDescriptionParser.Tpo"; exit 1; fi
#	source='mConfigDescriptionParser.cpp' object='libtnlcore_0_1_la-mConfigDescriptionParser.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_0_1_la_CXXFLAGS) $(CXXFLAGS) -c -o libtnlcore_0_1_la-mConfigDescriptionParser.lo `test -f 'mConfigDescriptionParser.cpp' || echo '$(srcdir)/'`mConfigDescriptionParser.cpp

libtnlcore_0_1_la-mParameterContainer.lo: mParameterContainer.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_0_1_la_CXXFLAGS) $(CXXFLAGS) -MT libtnlcore_0_1_la-mParameterContainer.lo -MD -MP -MF "$(DEPDIR)/libtnlcore_0_1_la-mParameterContainer.Tpo" -c -o libtnlcore_0_1_la-mParameterContainer.lo `test -f 'mParameterContainer.cpp' || echo '$(srcdir)/'`mParameterContainer.cpp; \
	then mv -f "$(DEPDIR)/libtnlcore_0_1_la-mParameterContainer.Tpo" "$(DEPDIR)/libtnlcore_0_1_la-mParameterContainer.Plo"; else rm -f "$(DEPDIR)/libtnlcore_0_1_la-mParameterContainer.Tpo"; exit 1; fi
#	source='mParameterContainer.cpp' object='libtnlcore_0_1_la-mParameterContainer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_0_1_la_CXXFLAGS) $(CXXFLAGS) -c -o libtnlcore_0_1_la-mParameterContainer.lo `test -f 'mParameterContainer.cpp' || echo '$(srcdir)/'`mParameterContainer.cpp

libtnlcore_0_1_la-mTimerCPU.lo: mTimerCPU.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_0_1_la_CXXFLAGS) $(CXXFLAGS) -MT libtnlcore_0_1_la-mTimerCPU.lo -MD -MP -MF "$(DEPDIR)/libtnlcore_0_1_la-mTimerCPU.Tpo" -c -o libtnlcore_0_1_la-mTimerCPU.lo `test -f 'mTimerCPU.cpp' || echo '$(srcdir)/'`mTimerCPU.cpp; \
	then mv -f "$(DEPDIR)/libtnlcore_0_1_la-mTimerCPU.Tpo" "$(DEPDIR)/libtnlcore_0_1_la-mTimerCPU.Plo"; else rm -f "$(DEPDIR)/libtnlcore_0_1_la-mTimerCPU.Tpo"; exit 1; fi
#	source='mTimerCPU.cpp' object='libtnlcore_0_1_la-mTimerCPU.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_0_1_la_CXXFLAGS) $(CXXFLAGS) -c -o libtnlcore_0_1_la-mTimerCPU.lo `test -f 'mTimerCPU.cpp' || echo '$(srcdir)/'`mTimerCPU.cpp

libtnlcore_0_1_la-mTimerRT.lo: mTimerRT.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_0_1_la_CXXFLAGS) $(CXXFLAGS) -MT libtnlcore_0_1_la-mTimerRT.lo -MD -MP -MF "$(DEPDIR)/libtnlcore_0_1_la-mTimerRT.Tpo" -c -o libtnlcore_0_1_la-mTimerRT.lo `test -f 'mTimerRT.cpp' || echo '$(srcdir)/'`mTimerRT.cpp; \
	then mv -f "$(DEPDIR)/libtnlcore_0_1_la-mTimerRT.Tpo" "$(DEPDIR)/libtnlcore_0_1_la-mTimerRT.Plo"; else rm -f "$(DEPDIR)/libtnlcore_0_1_la-mTimerRT.Tpo"; exit 1; fi
#	source='mTimerRT.cpp' object='libtnlcore_0_1_la-mTimerRT.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_0_1_la_CXXFLAGS) $(CXXFLAGS) -c -o libtnlcore_0_1_la-mTimerRT.lo `test -f 'mTimerRT.cpp' || echo '$(srcdir)/'`mTimerRT.cpp

libtnlcore_0_1_la-compress-file.lo: compress-file.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_0_1_la_CXXFLAGS) $(CXXFLAGS) -MT libtnlcore_0_1_la-compress-file.lo -MD -MP -MF "$(DEPDIR)/libtnlcore_0_1_la-compress-file.Tpo" -c -o libtnlcore_0_1_la-compress-file.lo `test -f 'compress-file.cpp' || echo '$(srcdir)/'`compress-file.cpp; \
	then mv -f "$(DEPDIR)/libtnlcore_0_1_la-compress-file.Tpo" "$(DEPDIR)/libtnlcore_0_1_la-compress-file.Plo"; else rm -f "$(DEPDIR)/libtnlcore_0_1_la-compress-file.Tpo"; exit 1; fi
#	source='compress-file.cpp' object='libtnlcore_0_1_la-compress-file.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_0_1_la_CXXFLAGS) $(CXXFLAGS) -c -o libtnlcore_0_1_la-compress-file.lo `test -f 'compress-file.cpp' || echo '$(srcdir)/'`compress-file.cpp

libtnlcore_0_1_la-mfilename.lo: mfilename.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_0_1_la_CXXFLAGS) $(CXXFLAGS) -MT libtnlcore_0_1_la-mfilename.lo -MD -MP -MF "$(DEPDIR)/libtnlcore_0_1_la-mfilename.Tpo" -c -o libtnlcore_0_1_la-mfilename.lo `test -f 'mfilename.cpp' || echo '$(srcdir)/'`mfilename.cpp; \
	then mv -f "$(DEPDIR)/libtnlcore_0_1_la-mfilename.Tpo" "$(DEPDIR)/libtnlcore_0_1_la-mfilename.Plo"; else rm -f "$(DEPDIR)/libtnlcore_0_1_la-mfilename.Tpo"; exit 1; fi
#	source='mfilename.cpp' object='libtnlcore_0_1_la-mfilename.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_0_1_la_CXXFLAGS) $(CXXFLAGS) -c -o libtnlcore_0_1_la-mfilename.lo `test -f 'mfilename.cpp' || echo '$(srcdir)/'`mfilename.cpp

libtnlcore_0_1_la-mpi-supp.lo: mpi-supp.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_0_1_la_CXXFLAGS) $(CXXFLAGS) -MT libtnlcore_0_1_la-mpi-supp.lo -MD -MP -MF "$(DEPDIR)/libtnlcore_0_1_la-mpi-supp.Tpo" -c -o libtnlcore_0_1_la-mpi-supp.lo `test -f 'mpi-supp.cpp' || echo '$(srcdir)/'`mpi-supp.cpp; \
	then mv -f "$(DEPDIR)/libtnlcore_0_1_la-mpi-supp.Tpo" "$(DEPDIR)/libtnlcore_0_1_la-mpi-supp.Plo"; else rm -f "$(DEPDIR)/libtnlcore_0_1_la-mpi-supp.Tpo"; exit 1; fi
#	source='mpi-supp.cpp' object='libtnlcore_0_1_la-mpi-supp.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_0_1_la_CXXFLAGS) $(CXXFLAGS) -c -o libtnlcore_0_1_la-mpi-supp.lo `test -f 'mpi-supp.cpp' || echo '$(srcdir)/'`mpi-supp.cpp

libtnlcore_0_1_la-parse.lo: parse.cc
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_0_1_la_CXXFLAGS) $(CXXFLAGS) -MT libtnlcore_0_1_la-parse.lo -MD -MP -MF "$(DEPDIR)/libtnlcore_0_1_la-parse.Tpo" -c -o libtnlcore_0_1_la-parse.lo `test -f 'parse.cc' || echo '$(srcdir)/'`parse.cc; \
	then mv -f "$(DEPDIR)/libtnlcore_0_1_la-parse.Tpo" "$(DEPDIR)/libtnlcore_0_1_la-parse.Plo"; else rm -f "$(DEPDIR)/libtnlcore_0_1_la-parse.Tpo"; exit 1; fi
#	source='parse.cc' object='libtnlcore_0_1_la-parse.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_0_1_la_CXXFLAGS) $(CXXFLAGS) -c -o libtnlcore_0_1_la-parse.lo `test -f 'parse.cc' || echo '$(srcdir)/'`parse.cc

libtnlcore_dbg_0_1_la-mConfigDescription.lo: mConfigDescription.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_dbg_0_1_la_CXXFLAGS) $(CXXFLAGS) -MT libtnlcore_dbg_0_1_la-mConfigDescription.lo -MD -MP -MF "$(DEPDIR)/libtnlcore_dbg_0_1_la-mConfigDescription.Tpo" -c -o libtnlcore_dbg_0_1_la-mConfigDescription.lo `test -f 'mConfigDescription.cpp' || echo '$(srcdir)/'`mConfigDescription.cpp; \
	then mv -f "$(DEPDIR)/libtnlcore_dbg_0_1_la-mConfigDescription.Tpo" "$(DEPDIR)/libtnlcore_dbg_0_1_la-mConfigDescription.Plo"; else rm -f "$(DEPDIR)/libtnlcore_dbg_0_1_la-mConfigDescription.Tpo"; exit 1; fi
#	source='mConfigDescription.cpp' object='libtnlcore_dbg_0_1_la-mConfigDescription.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_dbg_0_1_la_CXXFLAGS) $(CXXFLAGS) -c -o libtnlcore_dbg_0_1_la-mConfigDescription.lo `test -f 'mConfigDescription.cpp' || echo '$(srcdir)/'`mConfigDescription.cpp

libtnlcore_dbg_0_1_la-mLogger.lo: mLogger.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_dbg_0_1_la_CXXFLAGS) $(CXXFLAGS) -MT libtnlcore_dbg_0_1_la-mLogger.lo -MD -MP -MF "$(DEPDIR)/libtnlcore_dbg_0_1_la-mLogger.Tpo" -c -o libtnlcore_dbg_0_1_la-mLogger.lo `test -f 'mLogger.cpp' || echo '$(srcdir)/'`mLogger.cpp; \
	then mv -f "$(DEPDIR)/libtnlcore_dbg_0_1_la-mLogger.Tpo" "$(DEPDIR)/libtnlcore_dbg_0_1_la-mLogger.Plo"; else rm -f "$(DEPDIR)/libtnlcore_dbg_0_1_la-mLogger.Tpo"; exit 1; fi
#	source='mLogger.cpp' object='libtnlcore_dbg_0_1_la-mLogger.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_dbg_0_1_la_CXXFLAGS) $(CXXFLAGS) -c -o libtnlcore_dbg_0_1_la-mLogger.lo `test -f 'mLogger.cpp' || echo '$(srcdir)/'`mLogger.cpp

libtnlcore_dbg_0_1_la-tnlObject.lo: tnlObject.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_dbg_0_1_la_CXXFLAGS) $(CXXFLAGS) -MT libtnlcore_dbg_0_1_la-tnlObject.lo -MD -MP -MF "$(DEPDIR)/libtnlcore_dbg_0_1_la-tnlObject.Tpo" -c -o libtnlcore_dbg_0_1_la-tnlObject.lo `test -f 'tnlObject.cpp' || echo '$(srcdir)/'`tnlObject.cpp; \
	then mv -f "$(DEPDIR)/libtnlcore_dbg_0_1_la-tnlObject.Tpo" "$(DEPDIR)/libtnlcore_dbg_0_1_la-tnlObject.Plo"; else rm -f "$(DEPDIR)/libtnlcore_dbg_0_1_la-tnlObject.Tpo"; exit 1; fi
#	source='tnlObject.cpp' object='libtnlcore_dbg_0_1_la-tnlObject.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_dbg_0_1_la_CXXFLAGS) $(CXXFLAGS) -c -o libtnlcore_dbg_0_1_la-tnlObject.lo `test -f 'tnlObject.cpp' || echo '$(srcdir)/'`tnlObject.cpp

libtnlcore_dbg_0_1_la-mString.lo: mString.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_dbg_0_1_la_CXXFLAGS) $(CXXFLAGS) -MT libtnlcore_dbg_0_1_la-mString.lo -MD -MP -MF "$(DEPDIR)/libtnlcore_dbg_0_1_la-mString.Tpo" -c -o libtnlcore_dbg_0_1_la-mString.lo `test -f 'mString.cpp' || echo '$(srcdir)/'`mString.cpp; \
	then mv -f "$(DEPDIR)/libtnlcore_dbg_0_1_la-mString.Tpo" "$(DEPDIR)/libtnlcore_dbg_0_1_la-mString.Plo"; else rm -f "$(DEPDIR)/libtnlcore_dbg_0_1_la-mString.Tpo"; exit 1; fi
#	source='mString.cpp' object='libtnlcore_dbg_0_1_la-mString.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_dbg_0_1_la_CXXFLAGS) $(CXXFLAGS) -c -o libtnlcore_dbg_0_1_la-mString.lo `test -f 'mString.cpp' || echo '$(srcdir)/'`mString.cpp

libtnlcore_dbg_0_1_la-mConfigDescriptionScanner.lo: mConfigDescriptionScanner.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_dbg_0_1_la_CXXFLAGS) $(CXXFLAGS) -MT libtnlcore_dbg_0_1_la-mConfigDescriptionScanner.lo -MD -MP -MF "$(DEPDIR)/libtnlcore_dbg_0_1_la-mConfigDescriptionScanner.Tpo" -c -o libtnlcore_dbg_0_1_la-mConfigDescriptionScanner.lo `test -f 'mConfigDescriptionScanner.cpp' || echo '$(srcdir)/'`mConfigDescriptionScanner.cpp; \
	then mv -f "$(DEPDIR)/libtnlcore_dbg_0_1_la-mConfigDescriptionScanner.Tpo" "$(DEPDIR)/libtnlcore_dbg_0_1_la-mConfigDescriptionScanner.Plo"; else rm -f "$(DEPDIR)/libtnlcore_dbg_0_1_la-mConfigDescriptionScanner.Tpo"; exit 1; fi
#	source='mConfigDescriptionScanner.cpp' object='libtnlcore_dbg_0_1_la-mConfigDescriptionScanner.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_dbg_0_1_la_CXXFLAGS) $(CXXFLAGS) -c -o libtnlcore_dbg_0_1_la-mConfigDescriptionScanner.lo `test -f 'mConfigDescriptionScanner.cpp' || echo '$(srcdir)/'`mConfigDescriptionScanner.cpp

libtnlcore_dbg_0_1_la-mConfigDescriptionParser.lo: mConfigDescriptionParser.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_dbg_0_1_la_CXXFLAGS) $(CXXFLAGS) -MT libtnlcore_dbg_0_1_la-mConfigDescriptionParser.lo -MD -MP -MF "$(DEPDIR)/libtnlcore_dbg_0_1_la-mConfigDescriptionParser.Tpo" -c -o libtnlcore_dbg_0_1_la-mConfigDescriptionParser.lo `test -f 'mConfigDescriptionParser.cpp' || echo '$(srcdir)/'`mConfigDescriptionParser.cpp; \
	then mv -f "$(DEPDIR)/libtnlcore_dbg_0_1_la-mConfigDescriptionParser.Tpo" "$(DEPDIR)/libtnlcore_dbg_0_1_la-mConfigDescriptionParser.Plo"; else rm -f "$(DEPDIR)/libtnlcore_dbg_0_1_la-mConfigDescriptionParser.Tpo"; exit 1; fi
#	source='mConfigDescriptionParser.cpp' object='libtnlcore_dbg_0_1_la-mConfigDescriptionParser.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_dbg_0_1_la_CXXFLAGS) $(CXXFLAGS) -c -o libtnlcore_dbg_0_1_la-mConfigDescriptionParser.lo `test -f 'mConfigDescriptionParser.cpp' || echo '$(srcdir)/'`mConfigDescriptionParser.cpp

libtnlcore_dbg_0_1_la-mParameterContainer.lo: mParameterContainer.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_dbg_0_1_la_CXXFLAGS) $(CXXFLAGS) -MT libtnlcore_dbg_0_1_la-mParameterContainer.lo -MD -MP -MF "$(DEPDIR)/libtnlcore_dbg_0_1_la-mParameterContainer.Tpo" -c -o libtnlcore_dbg_0_1_la-mParameterContainer.lo `test -f 'mParameterContainer.cpp' || echo '$(srcdir)/'`mParameterContainer.cpp; \
	then mv -f "$(DEPDIR)/libtnlcore_dbg_0_1_la-mParameterContainer.Tpo" "$(DEPDIR)/libtnlcore_dbg_0_1_la-mParameterContainer.Plo"; else rm -f "$(DEPDIR)/libtnlcore_dbg_0_1_la-mParameterContainer.Tpo"; exit 1; fi
#	source='mParameterContainer.cpp' object='libtnlcore_dbg_0_1_la-mParameterContainer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_dbg_0_1_la_CXXFLAGS) $(CXXFLAGS) -c -o libtnlcore_dbg_0_1_la-mParameterContainer.lo `test -f 'mParameterContainer.cpp' || echo '$(srcdir)/'`mParameterContainer.cpp

libtnlcore_dbg_0_1_la-mTimerCPU.lo: mTimerCPU.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_dbg_0_1_la_CXXFLAGS) $(CXXFLAGS) -MT libtnlcore_dbg_0_1_la-mTimerCPU.lo -MD -MP -MF "$(DEPDIR)/libtnlcore_dbg_0_1_la-mTimerCPU.Tpo" -c -o libtnlcore_dbg_0_1_la-mTimerCPU.lo `test -f 'mTimerCPU.cpp' || echo '$(srcdir)/'`mTimerCPU.cpp; \
	then mv -f "$(DEPDIR)/libtnlcore_dbg_0_1_la-mTimerCPU.Tpo" "$(DEPDIR)/libtnlcore_dbg_0_1_la-mTimerCPU.Plo"; else rm -f "$(DEPDIR)/libtnlcore_dbg_0_1_la-mTimerCPU.Tpo"; exit 1; fi
#	source='mTimerCPU.cpp' object='libtnlcore_dbg_0_1_la-mTimerCPU.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_dbg_0_1_la_CXXFLAGS) $(CXXFLAGS) -c -o libtnlcore_dbg_0_1_la-mTimerCPU.lo `test -f 'mTimerCPU.cpp' || echo '$(srcdir)/'`mTimerCPU.cpp

libtnlcore_dbg_0_1_la-mTimerRT.lo: mTimerRT.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_dbg_0_1_la_CXXFLAGS) $(CXXFLAGS) -MT libtnlcore_dbg_0_1_la-mTimerRT.lo -MD -MP -MF "$(DEPDIR)/libtnlcore_dbg_0_1_la-mTimerRT.Tpo" -c -o libtnlcore_dbg_0_1_la-mTimerRT.lo `test -f 'mTimerRT.cpp' || echo '$(srcdir)/'`mTimerRT.cpp; \
	then mv -f "$(DEPDIR)/libtnlcore_dbg_0_1_la-mTimerRT.Tpo" "$(DEPDIR)/libtnlcore_dbg_0_1_la-mTimerRT.Plo"; else rm -f "$(DEPDIR)/libtnlcore_dbg_0_1_la-mTimerRT.Tpo"; exit 1; fi
#	source='mTimerRT.cpp' object='libtnlcore_dbg_0_1_la-mTimerRT.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_dbg_0_1_la_CXXFLAGS) $(CXXFLAGS) -c -o libtnlcore_dbg_0_1_la-mTimerRT.lo `test -f 'mTimerRT.cpp' || echo '$(srcdir)/'`mTimerRT.cpp

libtnlcore_dbg_0_1_la-compress-file.lo: compress-file.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_dbg_0_1_la_CXXFLAGS) $(CXXFLAGS) -MT libtnlcore_dbg_0_1_la-compress-file.lo -MD -MP -MF "$(DEPDIR)/libtnlcore_dbg_0_1_la-compress-file.Tpo" -c -o libtnlcore_dbg_0_1_la-compress-file.lo `test -f 'compress-file.cpp' || echo '$(srcdir)/'`compress-file.cpp; \
	then mv -f "$(DEPDIR)/libtnlcore_dbg_0_1_la-compress-file.Tpo" "$(DEPDIR)/libtnlcore_dbg_0_1_la-compress-file.Plo"; else rm -f "$(DEPDIR)/libtnlcore_dbg_0_1_la-compress-file.Tpo"; exit 1; fi
#	source='compress-file.cpp' object='libtnlcore_dbg_0_1_la-compress-file.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_dbg_0_1_la_CXXFLAGS) $(CXXFLAGS) -c -o libtnlcore_dbg_0_1_la-compress-file.lo `test -f 'compress-file.cpp' || echo '$(srcdir)/'`compress-file.cpp

libtnlcore_dbg_0_1_la-mfilename.lo: mfilename.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_dbg_0_1_la_CXXFLAGS) $(CXXFLAGS) -MT libtnlcore_dbg_0_1_la-mfilename.lo -MD -MP -MF "$(DEPDIR)/libtnlcore_dbg_0_1_la-mfilename.Tpo" -c -o libtnlcore_dbg_0_1_la-mfilename.lo `test -f 'mfilename.cpp' || echo '$(srcdir)/'`mfilename.cpp; \
	then mv -f "$(DEPDIR)/libtnlcore_dbg_0_1_la-mfilename.Tpo" "$(DEPDIR)/libtnlcore_dbg_0_1_la-mfilename.Plo"; else rm -f "$(DEPDIR)/libtnlcore_dbg_0_1_la-mfilename.Tpo"; exit 1; fi
#	source='mfilename.cpp' object='libtnlcore_dbg_0_1_la-mfilename.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_dbg_0_1_la_CXXFLAGS) $(CXXFLAGS) -c -o libtnlcore_dbg_0_1_la-mfilename.lo `test -f 'mfilename.cpp' || echo '$(srcdir)/'`mfilename.cpp

libtnlcore_dbg_0_1_la-mpi-supp.lo: mpi-supp.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_dbg_0_1_la_CXXFLAGS) $(CXXFLAGS) -MT libtnlcore_dbg_0_1_la-mpi-supp.lo -MD -MP -MF "$(DEPDIR)/libtnlcore_dbg_0_1_la-mpi-supp.Tpo" -c -o libtnlcore_dbg_0_1_la-mpi-supp.lo `test -f 'mpi-supp.cpp' || echo '$(srcdir)/'`mpi-supp.cpp; \
	then mv -f "$(DEPDIR)/libtnlcore_dbg_0_1_la-mpi-supp.Tpo" "$(DEPDIR)/libtnlcore_dbg_0_1_la-mpi-supp.Plo"; else rm -f "$(DEPDIR)/libtnlcore_dbg_0_1_la-mpi-supp.Tpo"; exit 1; fi
#	source='mpi-supp.cpp' object='libtnlcore_dbg_0_1_la-mpi-supp.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_dbg_0_1_la_CXXFLAGS) $(CXXFLAGS) -c -o libtnlcore_dbg_0_1_la-mpi-supp.lo `test -f 'mpi-supp.cpp' || echo '$(srcdir)/'`mpi-supp.cpp

libtnlcore_dbg_0_1_la-parse.lo: parse.cc
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_dbg_0_1_la_CXXFLAGS) $(CXXFLAGS) -MT libtnlcore_dbg_0_1_la-parse.lo -MD -MP -MF "$(DEPDIR)/libtnlcore_dbg_0_1_la-parse.Tpo" -c -o libtnlcore_dbg_0_1_la-parse.lo `test -f 'parse.cc' || echo '$(srcdir)/'`parse.cc; \
	then mv -f "$(DEPDIR)/libtnlcore_dbg_0_1_la-parse.Tpo" "$(DEPDIR)/libtnlcore_dbg_0_1_la-parse.Plo"; else rm -f "$(DEPDIR)/libtnlcore_dbg_0_1_la-parse.Tpo"; exit 1; fi
#	source='parse.cc' object='libtnlcore_dbg_0_1_la-parse.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_dbg_0_1_la_CXXFLAGS) $(CXXFLAGS) -c -o libtnlcore_dbg_0_1_la-parse.lo `test -f 'parse.cc' || echo '$(srcdir)/'`parse.cc

libtnlcore_mpi_0_1_la-mConfigDescription.lo: mConfigDescription.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_mpi_0_1_la_CXXFLAGS) $(CXXFLAGS) -MT libtnlcore_mpi_0_1_la-mConfigDescription.lo -MD -MP -MF "$(DEPDIR)/libtnlcore_mpi_0_1_la-mConfigDescription.Tpo" -c -o libtnlcore_mpi_0_1_la-mConfigDescription.lo `test -f 'mConfigDescription.cpp' || echo '$(srcdir)/'`mConfigDescription.cpp; \
	then mv -f "$(DEPDIR)/libtnlcore_mpi_0_1_la-mConfigDescription.Tpo" "$(DEPDIR)/libtnlcore_mpi_0_1_la-mConfigDescription.Plo"; else rm -f "$(DEPDIR)/libtnlcore_mpi_0_1_la-mConfigDescription.Tpo"; exit 1; fi
#	source='mConfigDescription.cpp' object='libtnlcore_mpi_0_1_la-mConfigDescription.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_mpi_0_1_la_CXXFLAGS) $(CXXFLAGS) -c -o libtnlcore_mpi_0_1_la-mConfigDescription.lo `test -f 'mConfigDescription.cpp' || echo '$(srcdir)/'`mConfigDescription.cpp

libtnlcore_mpi_0_1_la-mLogger.lo: mLogger.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_mpi_0_1_la_CXXFLAGS) $(CXXFLAGS) -MT libtnlcore_mpi_0_1_la-mLogger.lo -MD -MP -MF "$(DEPDIR)/libtnlcore_mpi_0_1_la-mLogger.Tpo" -c -o libtnlcore_mpi_0_1_la-mLogger.lo `test -f 'mLogger.cpp' || echo '$(srcdir)/'`mLogger.cpp; \
	then mv -f "$(DEPDIR)/libtnlcore_mpi_0_1_la-mLogger.Tpo" "$(DEPDIR)/libtnlcore_mpi_0_1_la-mLogger.Plo"; else rm -f "$(DEPDIR)/libtnlcore_mpi_0_1_la-mLogger.Tpo"; exit 1; fi
#	source='mLogger.cpp' object='libtnlcore_mpi_0_1_la-mLogger.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_mpi_0_1_la_CXXFLAGS) $(CXXFLAGS) -c -o libtnlcore_mpi_0_1_la-mLogger.lo `test -f 'mLogger.cpp' || echo '$(srcdir)/'`mLogger.cpp

libtnlcore_mpi_0_1_la-tnlObject.lo: tnlObject.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_mpi_0_1_la_CXXFLAGS) $(CXXFLAGS) -MT libtnlcore_mpi_0_1_la-tnlObject.lo -MD -MP -MF "$(DEPDIR)/libtnlcore_mpi_0_1_la-tnlObject.Tpo" -c -o libtnlcore_mpi_0_1_la-tnlObject.lo `test -f 'tnlObject.cpp' || echo '$(srcdir)/'`tnlObject.cpp; \
	then mv -f "$(DEPDIR)/libtnlcore_mpi_0_1_la-tnlObject.Tpo" "$(DEPDIR)/libtnlcore_mpi_0_1_la-tnlObject.Plo"; else rm -f "$(DEPDIR)/libtnlcore_mpi_0_1_la-tnlObject.Tpo"; exit 1; fi
#	source='tnlObject.cpp' object='libtnlcore_mpi_0_1_la-tnlObject.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_mpi_0_1_la_CXXFLAGS) $(CXXFLAGS) -c -o libtnlcore_mpi_0_1_la-tnlObject.lo `test -f 'tnlObject.cpp' || echo '$(srcdir)/'`tnlObject.cpp

libtnlcore_mpi_0_1_la-mString.lo: mString.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_mpi_0_1_la_CXXFLAGS) $(CXXFLAGS) -MT libtnlcore_mpi_0_1_la-mString.lo -MD -MP -MF "$(DEPDIR)/libtnlcore_mpi_0_1_la-mString.Tpo" -c -o libtnlcore_mpi_0_1_la-mString.lo `test -f 'mString.cpp' || echo '$(srcdir)/'`mString.cpp; \
	then mv -f "$(DEPDIR)/libtnlcore_mpi_0_1_la-mString.Tpo" "$(DEPDIR)/libtnlcore_mpi_0_1_la-mString.Plo"; else rm -f "$(DEPDIR)/libtnlcore_mpi_0_1_la-mString.Tpo"; exit 1; fi
#	source='mString.cpp' object='libtnlcore_mpi_0_1_la-mString.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_mpi_0_1_la_CXXFLAGS) $(CXXFLAGS) -c -o libtnlcore_mpi_0_1_la-mString.lo `test -f 'mString.cpp' || echo '$(srcdir)/'`mString.cpp

libtnlcore_mpi_0_1_la-mConfigDescriptionScanner.lo: mConfigDescriptionScanner.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_mpi_0_1_la_CXXFLAGS) $(CXXFLAGS) -MT libtnlcore_mpi_0_1_la-mConfigDescriptionScanner.lo -MD -MP -MF "$(DEPDIR)/libtnlcore_mpi_0_1_la-mConfigDescriptionScanner.Tpo" -c -o libtnlcore_mpi_0_1_la-mConfigDescriptionScanner.lo `test -f 'mConfigDescriptionScanner.cpp' || echo '$(srcdir)/'`mConfigDescriptionScanner.cpp; \
	then mv -f "$(DEPDIR)/libtnlcore_mpi_0_1_la-mConfigDescriptionScanner.Tpo" "$(DEPDIR)/libtnlcore_mpi_0_1_la-mConfigDescriptionScanner.Plo"; else rm -f "$(DEPDIR)/libtnlcore_mpi_0_1_la-mConfigDescriptionScanner.Tpo"; exit 1; fi
#	source='mConfigDescriptionScanner.cpp' object='libtnlcore_mpi_0_1_la-mConfigDescriptionScanner.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_mpi_0_1_la_CXXFLAGS) $(CXXFLAGS) -c -o libtnlcore_mpi_0_1_la-mConfigDescriptionScanner.lo `test -f 'mConfigDescriptionScanner.cpp' || echo '$(srcdir)/'`mConfigDescriptionScanner.cpp

libtnlcore_mpi_0_1_la-mConfigDescriptionParser.lo: mConfigDescriptionParser.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_mpi_0_1_la_CXXFLAGS) $(CXXFLAGS) -MT libtnlcore_mpi_0_1_la-mConfigDescriptionParser.lo -MD -MP -MF "$(DEPDIR)/libtnlcore_mpi_0_1_la-mConfigDescriptionParser.Tpo" -c -o libtnlcore_mpi_0_1_la-mConfigDescriptionParser.lo `test -f 'mConfigDescriptionParser.cpp' || echo '$(srcdir)/'`mConfigDescriptionParser.cpp; \
	then mv -f "$(DEPDIR)/libtnlcore_mpi_0_1_la-mConfigDescriptionParser.Tpo" "$(DEPDIR)/libtnlcore_mpi_0_1_la-mConfigDescriptionParser.Plo"; else rm -f "$(DEPDIR)/libtnlcore_mpi_0_1_la-mConfigDescriptionParser.Tpo"; exit 1; fi
#	source='mConfigDescriptionParser.cpp' object='libtnlcore_mpi_0_1_la-mConfigDescriptionParser.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_mpi_0_1_la_CXXFLAGS) $(CXXFLAGS) -c -o libtnlcore_mpi_0_1_la-mConfigDescriptionParser.lo `test -f 'mConfigDescriptionParser.cpp' || echo '$(srcdir)/'`mConfigDescriptionParser.cpp

libtnlcore_mpi_0_1_la-mParameterContainer.lo: mParameterContainer.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_mpi_0_1_la_CXXFLAGS) $(CXXFLAGS) -MT libtnlcore_mpi_0_1_la-mParameterContainer.lo -MD -MP -MF "$(DEPDIR)/libtnlcore_mpi_0_1_la-mParameterContainer.Tpo" -c -o libtnlcore_mpi_0_1_la-mParameterContainer.lo `test -f 'mParameterContainer.cpp' || echo '$(srcdir)/'`mParameterContainer.cpp; \
	then mv -f "$(DEPDIR)/libtnlcore_mpi_0_1_la-mParameterContainer.Tpo" "$(DEPDIR)/libtnlcore_mpi_0_1_la-mParameterContainer.Plo"; else rm -f "$(DEPDIR)/libtnlcore_mpi_0_1_la-mParameterContainer.Tpo"; exit 1; fi
#	source='mParameterContainer.cpp' object='libtnlcore_mpi_0_1_la-mParameterContainer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_mpi_0_1_la_CXXFLAGS) $(CXXFLAGS) -c -o libtnlcore_mpi_0_1_la-mParameterContainer.lo `test -f 'mParameterContainer.cpp' || echo '$(srcdir)/'`mParameterContainer.cpp

libtnlcore_mpi_0_1_la-mTimerCPU.lo: mTimerCPU.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_mpi_0_1_la_CXXFLAGS) $(CXXFLAGS) -MT libtnlcore_mpi_0_1_la-mTimerCPU.lo -MD -MP -MF "$(DEPDIR)/libtnlcore_mpi_0_1_la-mTimerCPU.Tpo" -c -o libtnlcore_mpi_0_1_la-mTimerCPU.lo `test -f 'mTimerCPU.cpp' || echo '$(srcdir)/'`mTimerCPU.cpp; \
	then mv -f "$(DEPDIR)/libtnlcore_mpi_0_1_la-mTimerCPU.Tpo" "$(DEPDIR)/libtnlcore_mpi_0_1_la-mTimerCPU.Plo"; else rm -f "$(DEPDIR)/libtnlcore_mpi_0_1_la-mTimerCPU.Tpo"; exit 1; fi
#	source='mTimerCPU.cpp' object='libtnlcore_mpi_0_1_la-mTimerCPU.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_mpi_0_1_la_CXXFLAGS) $(CXXFLAGS) -c -o libtnlcore_mpi_0_1_la-mTimerCPU.lo `test -f 'mTimerCPU.cpp' || echo '$(srcdir)/'`mTimerCPU.cpp

libtnlcore_mpi_0_1_la-mTimerRT.lo: mTimerRT.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_mpi_0_1_la_CXXFLAGS) $(CXXFLAGS) -MT libtnlcore_mpi_0_1_la-mTimerRT.lo -MD -MP -MF "$(DEPDIR)/libtnlcore_mpi_0_1_la-mTimerRT.Tpo" -c -o libtnlcore_mpi_0_1_la-mTimerRT.lo `test -f 'mTimerRT.cpp' || echo '$(srcdir)/'`mTimerRT.cpp; \
	then mv -f "$(DEPDIR)/libtnlcore_mpi_0_1_la-mTimerRT.Tpo" "$(DEPDIR)/libtnlcore_mpi_0_1_la-mTimerRT.Plo"; else rm -f "$(DEPDIR)/libtnlcore_mpi_0_1_la-mTimerRT.Tpo"; exit 1; fi
#	source='mTimerRT.cpp' object='libtnlcore_mpi_0_1_la-mTimerRT.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_mpi_0_1_la_CXXFLAGS) $(CXXFLAGS) -c -o libtnlcore_mpi_0_1_la-mTimerRT.lo `test -f 'mTimerRT.cpp' || echo '$(srcdir)/'`mTimerRT.cpp

libtnlcore_mpi_0_1_la-compress-file.lo: compress-file.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_mpi_0_1_la_CXXFLAGS) $(CXXFLAGS) -MT libtnlcore_mpi_0_1_la-compress-file.lo -MD -MP -MF "$(DEPDIR)/libtnlcore_mpi_0_1_la-compress-file.Tpo" -c -o libtnlcore_mpi_0_1_la-compress-file.lo `test -f 'compress-file.cpp' || echo '$(srcdir)/'`compress-file.cpp; \
	then mv -f "$(DEPDIR)/libtnlcore_mpi_0_1_la-compress-file.Tpo" "$(DEPDIR)/libtnlcore_mpi_0_1_la-compress-file.Plo"; else rm -f "$(DEPDIR)/libtnlcore_mpi_0_1_la-compress-file.Tpo"; exit 1; fi
#	source='compress-file.cpp' object='libtnlcore_mpi_0_1_la-compress-file.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_mpi_0_1_la_CXXFLAGS) $(CXXFLAGS) -c -o libtnlcore_mpi_0_1_la-compress-file.lo `test -f 'compress-file.cpp' || echo '$(srcdir)/'`compress-file.cpp

libtnlcore_mpi_0_1_la-mfilename.lo: mfilename.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_mpi_0_1_la_CXXFLAGS) $(CXXFLAGS) -MT libtnlcore_mpi_0_1_la-mfilename.lo -MD -MP -MF "$(DEPDIR)/libtnlcore_mpi_0_1_la-mfilename.Tpo" -c -o libtnlcore_mpi_0_1_la-mfilename.lo `test -f 'mfilename.cpp' || echo '$(srcdir)/'`mfilename.cpp; \
	then mv -f "$(DEPDIR)/libtnlcore_mpi_0_1_la-mfilename.Tpo" "$(DEPDIR)/libtnlcore_mpi_0_1_la-mfilename.Plo"; else rm -f "$(DEPDIR)/libtnlcore_mpi_0_1_la-mfilename.Tpo"; exit 1; fi
#	source='mfilename.cpp' object='libtnlcore_mpi_0_1_la-mfilename.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_mpi_0_1_la_CXXFLAGS) $(CXXFLAGS) -c -o libtnlcore_mpi_0_1_la-mfilename.lo `test -f 'mfilename.cpp' || echo '$(srcdir)/'`mfilename.cpp

libtnlcore_mpi_0_1_la-mpi-supp.lo: mpi-supp.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_mpi_0_1_la_CXXFLAGS) $(CXXFLAGS) -MT libtnlcore_mpi_0_1_la-mpi-supp.lo -MD -MP -MF "$(DEPDIR)/libtnlcore_mpi_0_1_la-mpi-supp.Tpo" -c -o libtnlcore_mpi_0_1_la-mpi-supp.lo `test -f 'mpi-supp.cpp' || echo '$(srcdir)/'`mpi-supp.cpp; \
	then mv -f "$(DEPDIR)/libtnlcore_mpi_0_1_la-mpi-supp.Tpo" "$(DEPDIR)/libtnlcore_mpi_0_1_la-mpi-supp.Plo"; else rm -f "$(DEPDIR)/libtnlcore_mpi_0_1_la-mpi-supp.Tpo"; exit 1; fi
#	source='mpi-supp.cpp' object='libtnlcore_mpi_0_1_la-mpi-supp.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_mpi_0_1_la_CXXFLAGS) $(CXXFLAGS) -c -o libtnlcore_mpi_0_1_la-mpi-supp.lo `test -f 'mpi-supp.cpp' || echo '$(srcdir)/'`mpi-supp.cpp

libtnlcore_mpi_0_1_la-parse.lo: parse.cc
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_mpi_0_1_la_CXXFLAGS) $(CXXFLAGS) -MT libtnlcore_mpi_0_1_la-parse.lo -MD -MP -MF "$(DEPDIR)/libtnlcore_mpi_0_1_la-parse.Tpo" -c -o libtnlcore_mpi_0_1_la-parse.lo `test -f 'parse.cc' || echo '$(srcdir)/'`parse.cc; \
	then mv -f "$(DEPDIR)/libtnlcore_mpi_0_1_la-parse.Tpo" "$(DEPDIR)/libtnlcore_mpi_0_1_la-parse.Plo"; else rm -f "$(DEPDIR)/libtnlcore_mpi_0_1_la-parse.Tpo"; exit 1; fi
#	source='parse.cc' object='libtnlcore_mpi_0_1_la-parse.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_mpi_0_1_la_CXXFLAGS) $(CXXFLAGS) -c -o libtnlcore_mpi_0_1_la-parse.lo `test -f 'parse.cc' || echo '$(srcdir)/'`parse.cc

libtnlcore_mpi_dbg_0_1_la-mConfigDescription.lo: mConfigDescription.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_mpi_dbg_0_1_la_CXXFLAGS) $(CXXFLAGS) -MT libtnlcore_mpi_dbg_0_1_la-mConfigDescription.lo -MD -MP -MF "$(DEPDIR)/libtnlcore_mpi_dbg_0_1_la-mConfigDescription.Tpo" -c -o libtnlcore_mpi_dbg_0_1_la-mConfigDescription.lo `test -f 'mConfigDescription.cpp' || echo '$(srcdir)/'`mConfigDescription.cpp; \
	then mv -f "$(DEPDIR)/libtnlcore_mpi_dbg_0_1_la-mConfigDescription.Tpo" "$(DEPDIR)/libtnlcore_mpi_dbg_0_1_la-mConfigDescription.Plo"; else rm -f "$(DEPDIR)/libtnlcore_mpi_dbg_0_1_la-mConfigDescription.Tpo"; exit 1; fi
#	source='mConfigDescription.cpp' object='libtnlcore_mpi_dbg_0_1_la-mConfigDescription.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_mpi_dbg_0_1_la_CXXFLAGS) $(CXXFLAGS) -c -o libtnlcore_mpi_dbg_0_1_la-mConfigDescription.lo `test -f 'mConfigDescription.cpp' || echo '$(srcdir)/'`mConfigDescription.cpp

libtnlcore_mpi_dbg_0_1_la-mLogger.lo: mLogger.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_mpi_dbg_0_1_la_CXXFLAGS) $(CXXFLAGS) -MT libtnlcore_mpi_dbg_0_1_la-mLogger.lo -MD -MP -MF "$(DEPDIR)/libtnlcore_mpi_dbg_0_1_la-mLogger.Tpo" -c -o libtnlcore_mpi_dbg_0_1_la-mLogger.lo `test -f 'mLogger.cpp' || echo '$(srcdir)/'`mLogger.cpp; \
	then mv -f "$(DEPDIR)/libtnlcore_mpi_dbg_0_1_la-mLogger.Tpo" "$(DEPDIR)/libtnlcore_mpi_dbg_0_1_la-mLogger.Plo"; else rm -f "$(DEPDIR)/libtnlcore_mpi_dbg_0_1_la-mLogger.Tpo"; exit 1; fi
#	source='mLogger.cpp' object='libtnlcore_mpi_dbg_0_1_la-mLogger.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_mpi_dbg_0_1_la_CXXFLAGS) $(CXXFLAGS) -c -o libtnlcore_mpi_dbg_0_1_la-mLogger.lo `test -f 'mLogger.cpp' || echo '$(srcdir)/'`mLogger.cpp

libtnlcore_mpi_dbg_0_1_la-tnlObject.lo: tnlObject.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_mpi_dbg_0_1_la_CXXFLAGS) $(CXXFLAGS) -MT libtnlcore_mpi_dbg_0_1_la-tnlObject.lo -MD -MP -MF "$(DEPDIR)/libtnlcore_mpi_dbg_0_1_la-tnlObject.Tpo" -c -o libtnlcore_mpi_dbg_0_1_la-tnlObject.lo `test -f 'tnlObject.cpp' || echo '$(srcdir)/'`tnlObject.cpp; \
	then mv -f "$(DEPDIR)/libtnlcore_mpi_dbg_0_1_la-tnlObject.Tpo" "$(DEPDIR)/libtnlcore_mpi_dbg_0_1_la-tnlObject.Plo"; else rm -f "$(DEPDIR)/libtnlcore_mpi_dbg_0_1_la-tnlObject.Tpo"; exit 1; fi
#	source='tnlObject.cpp' object='libtnlcore_mpi_dbg_0_1_la-tnlObject.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_mpi_dbg_0_1_la_CXXFLAGS) $(CXXFLAGS) -c -o libtnlcore_mpi_dbg_0_1_la-tnlObject.lo `test -f 'tnlObject.cpp' || echo '$(srcdir)/'`tnlObject.cpp

libtnlcore_mpi_dbg_0_1_la-mString.lo: mString.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_mpi_dbg_0_1_la_CXXFLAGS) $(CXXFLAGS) -MT libtnlcore_mpi_dbg_0_1_la-mString.lo -MD -MP -MF "$(DEPDIR)/libtnlcore_mpi_dbg_0_1_la-mString.Tpo" -c -o libtnlcore_mpi_dbg_0_1_la-mString.lo `test -f 'mString.cpp' || echo '$(srcdir)/'`mString.cpp; \
	then mv -f "$(DEPDIR)/libtnlcore_mpi_dbg_0_1_la-mString.Tpo" "$(DEPDIR)/libtnlcore_mpi_dbg_0_1_la-mString.Plo"; else rm -f "$(DEPDIR)/libtnlcore_mpi_dbg_0_1_la-mString.Tpo"; exit 1; fi
#	source='mString.cpp' object='libtnlcore_mpi_dbg_0_1_la-mString.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_mpi_dbg_0_1_la_CXXFLAGS) $(CXXFLAGS) -c -o libtnlcore_mpi_dbg_0_1_la-mString.lo `test -f 'mString.cpp' || echo '$(srcdir)/'`mString.cpp

libtnlcore_mpi_dbg_0_1_la-mConfigDescriptionScanner.lo: mConfigDescriptionScanner.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_mpi_dbg_0_1_la_CXXFLAGS) $(CXXFLAGS) -MT libtnlcore_mpi_dbg_0_1_la-mConfigDescriptionScanner.lo -MD -MP -MF "$(DEPDIR)/libtnlcore_mpi_dbg_0_1_la-mConfigDescriptionScanner.Tpo" -c -o libtnlcore_mpi_dbg_0_1_la-mConfigDescriptionScanner.lo `test -f 'mConfigDescriptionScanner.cpp' || echo '$(srcdir)/'`mConfigDescriptionScanner.cpp; \
	then mv -f "$(DEPDIR)/libtnlcore_mpi_dbg_0_1_la-mConfigDescriptionScanner.Tpo" "$(DEPDIR)/libtnlcore_mpi_dbg_0_1_la-mConfigDescriptionScanner.Plo"; else rm -f "$(DEPDIR)/libtnlcore_mpi_dbg_0_1_la-mConfigDescriptionScanner.Tpo"; exit 1; fi
#	source='mConfigDescriptionScanner.cpp' object='libtnlcore_mpi_dbg_0_1_la-mConfigDescriptionScanner.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_mpi_dbg_0_1_la_CXXFLAGS) $(CXXFLAGS) -c -o libtnlcore_mpi_dbg_0_1_la-mConfigDescriptionScanner.lo `test -f 'mConfigDescriptionScanner.cpp' || echo '$(srcdir)/'`mConfigDescriptionScanner.cpp

libtnlcore_mpi_dbg_0_1_la-mConfigDescriptionParser.lo: mConfigDescriptionParser.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_mpi_dbg_0_1_la_CXXFLAGS) $(CXXFLAGS) -MT libtnlcore_mpi_dbg_0_1_la-mConfigDescriptionParser.lo -MD -MP -MF "$(DEPDIR)/libtnlcore_mpi_dbg_0_1_la-mConfigDescriptionParser.Tpo" -c -o libtnlcore_mpi_dbg_0_1_la-mConfigDescriptionParser.lo `test -f 'mConfigDescriptionParser.cpp' || echo '$(srcdir)/'`mConfigDescriptionParser.cpp; \
	then mv -f "$(DEPDIR)/libtnlcore_mpi_dbg_0_1_la-mConfigDescriptionParser.Tpo" "$(DEPDIR)/libtnlcore_mpi_dbg_0_1_la-mConfigDescriptionParser.Plo"; else rm -f "$(DEPDIR)/libtnlcore_mpi_dbg_0_1_la-mConfigDescriptionParser.Tpo"; exit 1; fi
#	source='mConfigDescriptionParser.cpp' object='libtnlcore_mpi_dbg_0_1_la-mConfigDescriptionParser.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_mpi_dbg_0_1_la_CXXFLAGS) $(CXXFLAGS) -c -o libtnlcore_mpi_dbg_0_1_la-mConfigDescriptionParser.lo `test -f 'mConfigDescriptionParser.cpp' || echo '$(srcdir)/'`mConfigDescriptionParser.cpp

libtnlcore_mpi_dbg_0_1_la-mParameterContainer.lo: mParameterContainer.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_mpi_dbg_0_1_la_CXXFLAGS) $(CXXFLAGS) -MT libtnlcore_mpi_dbg_0_1_la-mParameterContainer.lo -MD -MP -MF "$(DEPDIR)/libtnlcore_mpi_dbg_0_1_la-mParameterContainer.Tpo" -c -o libtnlcore_mpi_dbg_0_1_la-mParameterContainer.lo `test -f 'mParameterContainer.cpp' || echo '$(srcdir)/'`mParameterContainer.cpp; \
	then mv -f "$(DEPDIR)/libtnlcore_mpi_dbg_0_1_la-mParameterContainer.Tpo" "$(DEPDIR)/libtnlcore_mpi_dbg_0_1_la-mParameterContainer.Plo"; else rm -f "$(DEPDIR)/libtnlcore_mpi_dbg_0_1_la-mParameterContainer.Tpo"; exit 1; fi
#	source='mParameterContainer.cpp' object='libtnlcore_mpi_dbg_0_1_la-mParameterContainer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_mpi_dbg_0_1_la_CXXFLAGS) $(CXXFLAGS) -c -o libtnlcore_mpi_dbg_0_1_la-mParameterContainer.lo `test -f 'mParameterContainer.cpp' || echo '$(srcdir)/'`mParameterContainer.cpp

libtnlcore_mpi_dbg_0_1_la-mTimerCPU.lo: mTimerCPU.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_mpi_dbg_0_1_la_CXXFLAGS) $(CXXFLAGS) -MT libtnlcore_mpi_dbg_0_1_la-mTimerCPU.lo -MD -MP -MF "$(DEPDIR)/libtnlcore_mpi_dbg_0_1_la-mTimerCPU.Tpo" -c -o libtnlcore_mpi_dbg_0_1_la-mTimerCPU.lo `test -f 'mTimerCPU.cpp' || echo '$(srcdir)/'`mTimerCPU.cpp; \
	then mv -f "$(DEPDIR)/libtnlcore_mpi_dbg_0_1_la-mTimerCPU.Tpo" "$(DEPDIR)/libtnlcore_mpi_dbg_0_1_la-mTimerCPU.Plo"; else rm -f "$(DEPDIR)/libtnlcore_mpi_dbg_0_1_la-mTimerCPU.Tpo"; exit 1; fi
#	source='mTimerCPU.cpp' object='libtnlcore_mpi_dbg_0_1_la-mTimerCPU.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_mpi_dbg_0_1_la_CXXFLAGS) $(CXXFLAGS) -c -o libtnlcore_mpi_dbg_0_1_la-mTimerCPU.lo `test -f 'mTimerCPU.cpp' || echo '$(srcdir)/'`mTimerCPU.cpp

libtnlcore_mpi_dbg_0_1_la-mTimerRT.lo: mTimerRT.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_mpi_dbg_0_1_la_CXXFLAGS) $(CXXFLAGS) -MT libtnlcore_mpi_dbg_0_1_la-mTimerRT.lo -MD -MP -MF "$(DEPDIR)/libtnlcore_mpi_dbg_0_1_la-mTimerRT.Tpo" -c -o libtnlcore_mpi_dbg_0_1_la-mTimerRT.lo `test -f 'mTimerRT.cpp' || echo '$(srcdir)/'`mTimerRT.cpp; \
	then mv -f "$(DEPDIR)/libtnlcore_mpi_dbg_0_1_la-mTimerRT.Tpo" "$(DEPDIR)/libtnlcore_mpi_dbg_0_1_la-mTimerRT.Plo"; else rm -f "$(DEPDIR)/libtnlcore_mpi_dbg_0_1_la-mTimerRT.Tpo"; exit 1; fi
#	source='mTimerRT.cpp' object='libtnlcore_mpi_dbg_0_1_la-mTimerRT.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_mpi_dbg_0_1_la_CXXFLAGS) $(CXXFLAGS) -c -o libtnlcore_mpi_dbg_0_1_la-mTimerRT.lo `test -f 'mTimerRT.cpp' || echo '$(srcdir)/'`mTimerRT.cpp

libtnlcore_mpi_dbg_0_1_la-compress-file.lo: compress-file.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_mpi_dbg_0_1_la_CXXFLAGS) $(CXXFLAGS) -MT libtnlcore_mpi_dbg_0_1_la-compress-file.lo -MD -MP -MF "$(DEPDIR)/libtnlcore_mpi_dbg_0_1_la-compress-file.Tpo" -c -o libtnlcore_mpi_dbg_0_1_la-compress-file.lo `test -f 'compress-file.cpp' || echo '$(srcdir)/'`compress-file.cpp; \
	then mv -f "$(DEPDIR)/libtnlcore_mpi_dbg_0_1_la-compress-file.Tpo" "$(DEPDIR)/libtnlcore_mpi_dbg_0_1_la-compress-file.Plo"; else rm -f "$(DEPDIR)/libtnlcore_mpi_dbg_0_1_la-compress-file.Tpo"; exit 1; fi
#	source='compress-file.cpp' object='libtnlcore_mpi_dbg_0_1_la-compress-file.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_mpi_dbg_0_1_la_CXXFLAGS) $(CXXFLAGS) -c -o libtnlcore_mpi_dbg_0_1_la-compress-file.lo `test -f 'compress-file.cpp' || echo '$(srcdir)/'`compress-file.cpp

libtnlcore_mpi_dbg_0_1_la-mfilename.lo: mfilename.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_mpi_dbg_0_1_la_CXXFLAGS) $(CXXFLAGS) -MT libtnlcore_mpi_dbg_0_1_la-mfilename.lo -MD -MP -MF "$(DEPDIR)/libtnlcore_mpi_dbg_0_1_la-mfilename.Tpo" -c -o libtnlcore_mpi_dbg_0_1_la-mfilename.lo `test -f 'mfilename.cpp' || echo '$(srcdir)/'`mfilename.cpp; \
	then mv -f "$(DEPDIR)/libtnlcore_mpi_dbg_0_1_la-mfilename.Tpo" "$(DEPDIR)/libtnlcore_mpi_dbg_0_1_la-mfilename.Plo"; else rm -f "$(DEPDIR)/libtnlcore_mpi_dbg_0_1_la-mfilename.Tpo"; exit 1; fi
#	source='mfilename.cpp' object='libtnlcore_mpi_dbg_0_1_la-mfilename.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_mpi_dbg_0_1_la_CXXFLAGS) $(CXXFLAGS) -c -o libtnlcore_mpi_dbg_0_1_la-mfilename.lo `test -f 'mfilename.cpp' || echo '$(srcdir)/'`mfilename.cpp

libtnlcore_mpi_dbg_0_1_la-mpi-supp.lo: mpi-supp.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_mpi_dbg_0_1_la_CXXFLAGS) $(CXXFLAGS) -MT libtnlcore_mpi_dbg_0_1_la-mpi-supp.lo -MD -MP -MF "$(DEPDIR)/libtnlcore_mpi_dbg_0_1_la-mpi-supp.Tpo" -c -o libtnlcore_mpi_dbg_0_1_la-mpi-supp.lo `test -f 'mpi-supp.cpp' || echo '$(srcdir)/'`mpi-supp.cpp; \
	then mv -f "$(DEPDIR)/libtnlcore_mpi_dbg_0_1_la-mpi-supp.Tpo" "$(DEPDIR)/libtnlcore_mpi_dbg_0_1_la-mpi-supp.Plo"; else rm -f "$(DEPDIR)/libtnlcore_mpi_dbg_0_1_la-mpi-supp.Tpo"; exit 1; fi
#	source='mpi-supp.cpp' object='libtnlcore_mpi_dbg_0_1_la-mpi-supp.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_mpi_dbg_0_1_la_CXXFLAGS) $(CXXFLAGS) -c -o libtnlcore_mpi_dbg_0_1_la-mpi-supp.lo `test -f 'mpi-supp.cpp' || echo '$(srcdir)/'`mpi-supp.cpp

libtnlcore_mpi_dbg_0_1_la-parse.lo: parse.cc
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_mpi_dbg_0_1_la_CXXFLAGS) $(CXXFLAGS) -MT libtnlcore_mpi_dbg_0_1_la-parse.lo -MD -MP -MF "$(DEPDIR)/libtnlcore_mpi_dbg_0_1_la-parse.Tpo" -c -o libtnlcore_mpi_dbg_0_1_la-parse.lo `test -f 'parse.cc' || echo '$(srcdir)/'`parse.cc; \
	then mv -f "$(DEPDIR)/libtnlcore_mpi_dbg_0_1_la-parse.Tpo" "$(DEPDIR)/libtnlcore_mpi_dbg_0_1_la-parse.Plo"; else rm -f "$(DEPDIR)/libtnlcore_mpi_dbg_0_1_la-parse.Tpo"; exit 1; fi
#	source='parse.cc' object='libtnlcore_mpi_dbg_0_1_la-parse.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtnlcore_mpi_dbg_0_1_la_CXXFLAGS) $(CXXFLAGS) -c -o libtnlcore_mpi_dbg_0_1_la-parse.lo `test -f 'parse.cc' || echo '$(srcdir)/'`parse.cc

.cpp.o:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	if $(LTCXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:
install-libmcoreincludeHEADERS: $(libmcoreinclude_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(libmcoreincludedir)" || $(mkdir_p) "$(DESTDIR)$(libmcoreincludedir)"
	@list='$(libmcoreinclude_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(libmcoreincludeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(libmcoreincludedir)/$$f'"; \
	  $(libmcoreincludeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(libmcoreincludedir)/$$f"; \
	done

uninstall-libmcoreincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(libmcoreinclude_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(libmcoreincludedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(libmcoreincludedir)/$$f"; \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(libmcoreincludedir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-libmcoreincludeHEADERS

install-exec-am: install-libLTLIBRARIES

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-info-am uninstall-libLTLIBRARIES \
	uninstall-libmcoreincludeHEADERS

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libLTLIBRARIES clean-libtool ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-exec \
	install-exec-am install-info install-info-am \
	install-libLTLIBRARIES install-libmcoreincludeHEADERS \
	install-man install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-info-am uninstall-libLTLIBRARIES \
	uninstall-libmcoreincludeHEADERS

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
