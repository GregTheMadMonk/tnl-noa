group IO
{
   string mesh( "" )               [Mesh file. If none is given, a regular rectangular mesh is assumed.];
   list of string input-files(!)   [Input files.];
   list of string output-files     [Output files.];
   list of real level-lines        [List of level sets which will be drawn.];
   integer output-x-size           [X size of the output.];
   integer output-y-size           [Y size of the output.];
   integer output-z-size           [Z size of the output.];
   real scale(1.0)                 [Multiply the function by given number.];
   string output-format("gnuplot") [Output file format. Can be gnuplot, vti.];
   integer verbose(1)              [Set the verbosity of the program.];
},[Arguments describing input and output data.];

group Matrix
{
   string matrix-format("")        [What matrix format shell be drawn. Can be csr, rg-csr, arg-csr.];
   integer matrix-group-size(0)    [Sets the group/slice size for matrices stored on the GPU. This is used only when the matrix is converted from the CSR format.];
   integer desired-matrix-chunk-size(0)  [Sets desired chunk size for the Adaptive Row-grouped CSR format.];
   integer cuda-block-size(0)            [Sets CUDA block size for the Adaptive Row-groped CSr format.];
   bool sort-matrix(false)             [Sort the matrix rows decreasingly by the number of the non-zero elements.];
},[Arguments describing matrix formats.];